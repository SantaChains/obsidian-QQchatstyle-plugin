/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ChatStylePlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian3 = require("obsidian");

// src/settings.ts
var DEFAULT_SETTINGS = {
  // === 核心主题设置 ===
  defaultTheme: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
  darkModeTheme: "linear-gradient(135deg, #1e1e2e 0%, #2d2d44 50%, #3c3c5a 100%)",
  lightModeTheme: "linear-gradient(135deg, #ffecd2 0%, #fcb69f 50%, #ff9a9e 100%)",
  currentPreset: "default",
  enablePresetThemes: true,
  autoSwitchTheme: false,
  // === 标题栏配色设置 ===
  titleBarColor: "rgba(255, 255, 255, 0.95)",
  titleBarDarkColor: "rgba(30, 30, 30, 0.95)",
  titleTextColor: "#2c3e50",
  titleTextDarkColor: "#ecf0f1",
  enableCustomTitleBar: true,
  titleBarBlur: false,
  titleBarGradientAnimation: false,
  // === 字体与排版设置 ===
  fontSize: 14,
  fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
  fontWeight: "400",
  lineHeight: 1.5,
  letterSpacing: 0,
  textShadow: false,
  // === 消息气泡设置 ===
  bubbleRadius: 18,
  bubbleOpacity: 0.9,
  bubbleShadow: true,
  bubbleGlow: false,
  bubbleGradient: false,
  bubbleBorderWidth: 0,
  bubbleHoverEffect: true,
  // === 消息颜色配置 ===
  userMessageBg: "#007bff",
  userMessageColor: "#ffffff",
  assistantMessageBg: "#f8f9fa",
  assistantMessageColor: "#333333",
  systemMessageBg: "#fff3cd",
  systemMessageColor: "#666666",
  quotedMessageBg: "#e9ecef",
  quotedMessageColor: "#495057",
  // === 头像设置 ===
  avatarSize: 40,
  avatarRadius: 20,
  avatarBorder: true,
  avatarGlow: false,
  avatarShadow: true,
  avatarHoverScale: true,
  // === 布局间距设置 ===
  messageSpacing: 8,
  bubblePadding: 12,
  containerPadding: 16,
  maxMessageWidth: 80,
  // === 动画与交互设置 ===
  enableAnimations: true,
  animationSpeed: 1,
  animationEasing: "ease-in-out",
  enableParallax: false,
  enableTypewriter: false,
  // === 功能开关设置 ===
  enableQuoteJump: true,
  enableAutoFormat: true,
  showTimestamp: false,
  showMessageIndex: false,
  enableMessageSearch: true,
  enableExportChat: true,
  // === 代码块增强设置 ===
  codeBlockEnhanced: true,
  codeBlockShowLanguage: true,
  codeBlockShowCopyButton: true,
  codeBlockTheme: "default",
  codeBlockLineNumbers: false,
  codeBlockWordWrap: true,
  // === 高级视觉效果 ===
  enableGlassmorphism: false,
  enableNeonEffect: false,
  enableParticles: false,
  backgroundBlur: 0,
  // === 可访问性设置 ===
  highContrast: false,
  reducedMotion: false,
  fontSize_accessibility: 16,
  colorBlindFriendly: false,
  // === 性能优化设置 ===
  enableVirtualScrolling: false,
  lazyLoadImages: true,
  maxRenderMessages: 100,
  // === 自定义用户配置 ===
  userProfiles: {},
  customCSS: "",
  enableCustomCSS: false,
  // === 兼容性设置 ===
  legacyMode: false,
  debugMode: false,
  // === 备用颜色设置 ===
  defaultLeftColor: "#5a67d8",
  defaultRightColor: "#805ad5"
};
var TITLE_BAR_PRESETS = {
  // 浅色系列
  light_minimal: {
    name: "\u{1F90D} \u6781\u7B80\u767D",
    titleBarColor: "rgba(255, 255, 255, 0.95)",
    titleTextColor: "#2c3e50",
    titleBarDarkColor: "rgba(30, 30, 30, 0.95)",
    titleTextDarkColor: "#ecf0f1",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  light_blue: {
    name: "\u{1F499} \u6E05\u65B0\u84DD",
    titleBarColor: "linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%)",
    titleTextColor: "#1976d2",
    titleBarDarkColor: "linear-gradient(135deg, #1a237e 0%, #283593 100%)",
    titleTextDarkColor: "#64b5f6",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  light_green: {
    name: "\u{1F49A} \u81EA\u7136\u7EFF",
    titleBarColor: "linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%)",
    titleTextColor: "#2e7d32",
    titleBarDarkColor: "linear-gradient(135deg, #1b5e20 0%, #388e3c 100%)",
    titleTextDarkColor: "#81c784",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  light_purple: {
    name: "\u{1F49C} \u4F18\u96C5\u7D2B",
    titleBarColor: "linear-gradient(135deg, #f3e5f5 0%, #e1bee7 100%)",
    titleTextColor: "#7b1fa2",
    titleBarDarkColor: "linear-gradient(135deg, #4a148c 0%, #7b1fa2 100%)",
    titleTextDarkColor: "#ce93d8",
    fontSize: 17,
    fontWeight: "500",
    fontFamily: '"Georgia", "Times New Roman", serif'
  },
  light_orange: {
    name: "\u{1F9E1} \u6E29\u6696\u6A59",
    titleBarColor: "linear-gradient(135deg, #fff3e0 0%, #ffcc80 100%)",
    titleTextColor: "#ef6c00",
    titleBarDarkColor: "linear-gradient(135deg, #e65100 0%, #ff9800 100%)",
    titleTextDarkColor: "#ffb74d",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  light_pink: {
    name: "\u{1FA77} \u751C\u7F8E\u7C89",
    titleBarColor: "linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%)",
    titleTextColor: "#c2185b",
    titleBarDarkColor: "linear-gradient(135deg, #880e4f 0%, #ad1457 100%)",
    titleTextDarkColor: "#f06292",
    fontSize: 15,
    fontWeight: "500",
    fontFamily: '"Comic Sans MS", "Trebuchet MS", cursive'
  },
  light_teal: {
    name: "\u{1F48E} \u9752\u7EFF\u8272",
    titleBarColor: "linear-gradient(135deg, #e0f2f1 0%, #b2dfdb 100%)",
    titleTextColor: "#00695c",
    titleBarDarkColor: "linear-gradient(135deg, #004d40 0%, #00695c 100%)",
    titleTextDarkColor: "#4db6ac",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  light_amber: {
    name: "\u{1F31F} \u7425\u73C0\u91D1",
    titleBarColor: "linear-gradient(135deg, #fff8e1 0%, #ffecb3 100%)",
    titleTextColor: "#ff8f00",
    titleBarDarkColor: "linear-gradient(135deg, #ff6f00 0%, #ff8f00 100%)",
    titleTextDarkColor: "#ffc107",
    fontSize: 18,
    fontWeight: "700",
    fontFamily: '"Playfair Display", "Times New Roman", serif'
  },
  // 深色系列
  dark_minimal: {
    name: "\u{1F5A4} \u6DF1\u9083\u9ED1",
    titleBarColor: "rgba(248, 249, 250, 0.95)",
    titleTextColor: "#212529",
    titleBarDarkColor: "rgba(18, 18, 18, 0.95)",
    titleTextDarkColor: "#f8f9fa",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  dark_blue: {
    name: "\u{1F30C} \u6DF1\u6D77\u84DD",
    titleBarColor: "linear-gradient(135deg, #e3f2fd 0%, #90caf9 100%)",
    titleTextColor: "#0d47a1",
    titleBarDarkColor: "linear-gradient(135deg, #0d47a1 0%, #1565c0 100%)",
    titleTextDarkColor: "#90caf9",
    fontSize: 17,
    fontWeight: "700",
    fontFamily: '"Roboto Condensed", "Arial Narrow", sans-serif'
  },
  dark_purple: {
    name: "\u{1F52E} \u795E\u79D8\u7D2B",
    titleBarColor: "linear-gradient(135deg, #f3e5f5 0%, #ba68c8 100%)",
    titleTextColor: "#4a148c",
    titleBarDarkColor: "linear-gradient(135deg, #4a148c 0%, #6a1b9a 100%)",
    titleTextDarkColor: "#ba68c8",
    fontSize: 16,
    fontWeight: "500",
    fontFamily: '"Crimson Text", "Times New Roman", serif'
  },
  dark_red: {
    name: "\u2764\uFE0F \u70ED\u60C5\u7EA2",
    titleBarColor: "linear-gradient(135deg, #ffebee 0%, #ef5350 100%)",
    titleTextColor: "#b71c1c",
    titleBarDarkColor: "linear-gradient(135deg, #b71c1c 0%, #d32f2f 100%)",
    titleTextDarkColor: "#ef5350",
    fontSize: 18,
    fontWeight: "800",
    fontFamily: '"Impact", "Arial Black", sans-serif'
  },
  dark_green: {
    name: "\u{1F332} \u68EE\u6797\u7EFF",
    titleBarColor: "linear-gradient(135deg, #e8f5e8 0%, #66bb6a 100%)",
    titleTextColor: "#1b5e20",
    titleBarDarkColor: "linear-gradient(135deg, #1b5e20 0%, #2e7d32 100%)",
    titleTextDarkColor: "#66bb6a",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '"Merriweather", "Georgia", serif'
  },
  dark_orange: {
    name: "\u{1F525} \u70BD\u70ED\u6A59",
    titleBarColor: "linear-gradient(135deg, #fff3e0 0%, #ff7043 100%)",
    titleTextColor: "#bf360c",
    titleBarDarkColor: "linear-gradient(135deg, #bf360c 0%, #d84315 100%)",
    titleTextDarkColor: "#ff7043",
    fontSize: 17,
    fontWeight: "700",
    fontFamily: '"Oswald", "Arial", sans-serif'
  },
  dark_indigo: {
    name: "\u{1F303} \u975B\u84DD\u591C",
    titleBarColor: "linear-gradient(135deg, #e8eaf6 0%, #7986cb 100%)",
    titleTextColor: "#1a237e",
    titleBarDarkColor: "linear-gradient(135deg, #1a237e 0%, #303f9f 100%)",
    titleTextDarkColor: "#7986cb",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif'
  },
  dark_brown: {
    name: "\u{1F36B} \u5496\u5561\u68D5",
    titleBarColor: "linear-gradient(135deg, #efebe9 0%, #a1887f 100%)",
    titleTextColor: "#3e2723",
    titleBarDarkColor: "linear-gradient(135deg, #3e2723 0%, #5d4037 100%)",
    titleTextDarkColor: "#a1887f",
    fontSize: 16,
    fontWeight: "500",
    fontFamily: '"Lora", "Times New Roman", serif'
  },
  // 渐变系列
  gradient_sunset: {
    name: "\u{1F305} \u65E5\u843D\u6E10\u53D8",
    titleBarColor: "linear-gradient(135deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%)",
    titleTextColor: "#ffffff",
    titleBarDarkColor: "linear-gradient(135deg, #8b0000 0%, #4b0082 50%, #191970 100%)",
    titleTextDarkColor: "#fecfef",
    fontSize: 18,
    fontWeight: "700",
    fontFamily: '"Dancing Script", "Brush Script MT", cursive'
  },
  gradient_ocean: {
    name: "\u{1F30A} \u6D77\u6D0B\u6E10\u53D8",
    titleBarColor: "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
    titleTextColor: "#0077be",
    titleBarDarkColor: "linear-gradient(135deg, #003d5b 0%, #0077be 100%)",
    titleTextDarkColor: "#a8edea",
    fontSize: 16,
    fontWeight: "500",
    fontFamily: '"Quicksand", "Verdana", sans-serif'
  },
  gradient_forest: {
    name: "\u{1F333} \u68EE\u6797\u6E10\u53D8",
    titleBarColor: "linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)",
    titleTextColor: "#2d5016",
    titleBarDarkColor: "linear-gradient(135deg, #2d5016 0%, #4a6741 100%)",
    titleTextDarkColor: "#d299c2",
    fontSize: 16,
    fontWeight: "600",
    fontFamily: '"Cabin", "Trebuchet MS", sans-serif'
  },
  gradient_aurora: {
    name: "\u{1F30C} \u6781\u5149\u6E10\u53D8",
    titleBarColor: "linear-gradient(135deg, #a8edea 0%, #fed6e3 50%, #d299c2 100%)",
    titleTextColor: "#ffffff",
    titleBarDarkColor: "linear-gradient(135deg, #0f4c75 0%, #3282b8 50%, #1b262c 100%)",
    titleTextDarkColor: "#a8edea",
    fontSize: 17,
    fontWeight: "600",
    fontFamily: '"Orbitron", "Courier New", monospace'
  },
  // 特殊主题系列
  glassmorphism_light: {
    name: "\u{1F50D} \u73BB\u7483\u6001\u6D45\u8272",
    titleBarColor: "rgba(255, 255, 255, 0.25)",
    titleTextColor: "#2c3e50",
    titleBarDarkColor: "rgba(255, 255, 255, 0.1)",
    titleTextDarkColor: "#ecf0f1",
    fontSize: 16,
    fontWeight: "400",
    fontFamily: '"Inter", "Helvetica Neue", sans-serif'
  },
  glassmorphism_dark: {
    name: "\u{1F32B}\uFE0F \u73BB\u7483\u6001\u6DF1\u8272",
    titleBarColor: "rgba(0, 0, 0, 0.25)",
    titleTextColor: "#ffffff",
    titleBarDarkColor: "rgba(0, 0, 0, 0.4)",
    titleTextDarkColor: "#ffffff",
    fontSize: 16,
    fontWeight: "400",
    fontFamily: '"Inter", "Helvetica Neue", sans-serif'
  },
  neon_cyan: {
    name: "\u{1F4A0} \u9713\u8679\u9752",
    titleBarColor: "linear-gradient(135deg, #00ffff 0%, #0080ff 100%)",
    titleTextColor: "#ffffff",
    titleBarDarkColor: "linear-gradient(135deg, #008080 0%, #004080 100%)",
    titleTextDarkColor: "#00ffff",
    fontSize: 18,
    fontWeight: "800",
    fontFamily: '"Orbitron", "Courier New", monospace'
  },
  neon_pink: {
    name: "\u{1F496} \u9713\u8679\u7C89",
    titleBarColor: "linear-gradient(135deg, #ff1493 0%, #ff69b4 100%)",
    titleTextColor: "#ffffff",
    titleBarDarkColor: "linear-gradient(135deg, #8b0a50 0%, #c71585 100%)",
    titleTextDarkColor: "#ff69b4",
    fontSize: 18,
    fontWeight: "800",
    fontFamily: '"Orbitron", "Courier New", monospace'
  }
};
var PRESET_THEMES = {
  default: {
    name: "\u{1F3AF} \u7ECF\u5178\u84DD\u8C03",
    background: "linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)",
    darkBackground: "linear-gradient(135deg, #2c3e50 0%, #34495e 100%)",
    leftColor: "#e3f2fd",
    rightColor: "#4caf50",
    accentColor: "#2196f3",
    titleBarColor: "linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #2c3e50 0%, #34495e 100%)",
    titleTextColor: "#1976d2",
    titleTextDarkColor: "#64b5f6",
    category: "classic"
  },
  // 🎨 艺术大师系列
  monet: {
    name: "\u{1F3A8} \u83AB\u5948\u5370\u8C61",
    background: "linear-gradient(135deg, #a8e6cf 0%, #dcedc1 50%, #ffd3a5 100%)",
    darkBackground: "linear-gradient(135deg, #2d5016 0%, #4a6741 50%, #8b4513 100%)",
    leftColor: "#81c784",
    rightColor: "#ffb74d",
    accentColor: "#4fc3f7",
    titleBarColor: "linear-gradient(135deg, #a8e6cf 0%, #dcedc1 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #2d5016 0%, #4a6741 100%)",
    titleTextColor: "#2e7d32",
    titleTextDarkColor: "#81c784",
    category: "art"
  },
  vangogh: {
    name: "\u{1F33B} \u68B5\u9AD8\u661F\u591C",
    background: "linear-gradient(135deg, #1e3c72 0%, #2a5298 50%, #f7b733 100%)",
    darkBackground: "linear-gradient(135deg, #0f1419 0%, #1a252f 50%, #2d3748 100%)",
    leftColor: "#3f51b5",
    rightColor: "#ff9800",
    accentColor: "#ffeb3b",
    titleBarColor: "linear-gradient(135deg, #1e3c72 0%, #f7b733 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #0f1419 0%, #2d3748 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#ffeb3b",
    category: "art"
  },
  picasso: {
    name: "\u{1F3AD} \u6BD5\u52A0\u7D22\u84DD\u8C03",
    background: "linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%)",
    darkBackground: "linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)",
    leftColor: "#5c6bc0",
    rightColor: "#ab47bc",
    accentColor: "#ec407a",
    titleBarColor: "linear-gradient(135deg, #667eea 0%, #f093fb 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1a1a2e 0%, #0f3460 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#ec407a",
    category: "art"
  },
  // 🌈 自然灵感系列
  aurora: {
    name: "\u{1F30C} \u6781\u5149\u7EDA\u70C2",
    background: "linear-gradient(135deg, #00c9ff 0%, #92fe9d 25%, #ff9a9e 50%, #a8edea 75%, #fed6e3 100%)",
    darkBackground: "linear-gradient(135deg, #0f4c75 0%, #3282b8 25%, #bbe1fa 50%, #1b262c 75%, #0f3460 100%)",
    leftColor: "#00bcd4",
    rightColor: "#e91e63",
    accentColor: "#4caf50",
    titleBarColor: "linear-gradient(135deg, #00c9ff 0%, #92fe9d 50%, #fed6e3 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #0f4c75 0%, #1b262c 50%, #0f3460 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#4caf50",
    category: "nature"
  },
  rainbow: {
    name: "\u{1F308} \u5F69\u8679\u5E7B\u5883",
    background: "linear-gradient(135deg, #ff6b6b 0%, #feca57 16%, #48dbfb 33%, #ff9ff3 50%, #54a0ff 66%, #5f27cd 83%, #00d2d3 100%)",
    darkBackground: "linear-gradient(135deg, #8b0000 0%, #b8860b 16%, #008b8b 33%, #8b008b 50%, #00008b 66%, #4b0082 83%, #008080 100%)",
    leftColor: "#ff6b6b",
    rightColor: "#5f27cd",
    accentColor: "#feca57",
    titleBarColor: "linear-gradient(135deg, #ff6b6b 0%, #feca57 33%, #5f27cd 66%, #00d2d3 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #8b0000 0%, #4b0082 50%, #008080 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#feca57",
    category: "nature"
  },
  coral: {
    name: "\u{1FAB8} \u73CA\u745A\u6D77\u6D0B",
    background: "linear-gradient(135deg, #ff7675 0%, #fd79a8 25%, #fdcb6e 50%, #6c5ce7 75%, #74b9ff 100%)",
    darkBackground: "linear-gradient(135deg, #2d3436 0%, #636e72 25%, #ddd 50%, #74b9ff 75%, #0984e3 100%)",
    leftColor: "#fd79a8",
    rightColor: "#6c5ce7",
    accentColor: "#fdcb6e",
    titleBarColor: "linear-gradient(135deg, #ff7675 0%, #fd79a8 50%, #74b9ff 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #2d3436 0%, #636e72 50%, #0984e3 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#fdcb6e",
    category: "nature"
  },
  // 🎮 动漫游戏系列
  chainsaw: {
    name: "\u26A1 \u7535\u952F\u4EBA",
    background: "linear-gradient(135deg, #ff6b35 0%, #f7931e 50%, #ffcc02 100%)",
    darkBackground: "linear-gradient(135deg, #8b0000 0%, #dc143c 50%, #ff4500 100%)",
    leftColor: "#ff6b35",
    rightColor: "#dc143c",
    accentColor: "#ffcc02",
    titleBarColor: "linear-gradient(135deg, #ff6b35 0%, #f7931e 50%, #ffcc02 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #8b0000 0%, #dc143c 50%, #ff4500 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#ffcc02",
    category: "anime"
  },
  persona: {
    name: "\u{1F3AD} \u5973\u795E\u5F02\u95FB\u5F55P5R",
    background: "linear-gradient(135deg, #0A0A0A 0%, #1C1C1C 20%, #DC143C 40%, #000000 60%, #8B0000 80%, #0A0A0A 100%)",
    darkBackground: "linear-gradient(135deg, #000000 0%, #1A1A1A 25%, #8B0000 50%, #DC143C 75%, #000000 100%)",
    leftColor: "#DC143C",
    rightColor: "#8B0000",
    accentColor: "#FF0040",
    titleBarColor: "linear-gradient(135deg, #1A1A1A 0%, #DC143C 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #000000 0%, #8B0000 100%)",
    titleTextColor: "#FFFFFF",
    titleTextDarkColor: "#DC143C",
    category: "anime"
  },
  genshin: {
    name: "\u2694\uFE0F \u539F\u795E\u5E7B\u60F3",
    background: "linear-gradient(135deg, #4facfe 0%, #00f2fe 25%, #43e97b 50%, #38f9d7 75%, #5ee7df 100%)",
    darkBackground: "linear-gradient(135deg, #0f3460 0%, #16213e 25%, #1a1a2e 50%, #000000 75%, #2c3e50 100%)",
    leftColor: "#4facfe",
    rightColor: "#43e97b",
    accentColor: "#38f9d7",
    titleBarColor: "linear-gradient(135deg, #4facfe 0%, #00f2fe 50%, #5ee7df 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #0f3460 0%, #1a1a2e 50%, #2c3e50 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#38f9d7",
    category: "anime"
  },
  // 🏢 品牌设计系列
  apple: {
    name: "\u{1F34E} \u82F9\u679C\u7B80\u7EA6",
    background: "linear-gradient(135deg, #f5f5f7 0%, #e5e5ea 100%)",
    darkBackground: "linear-gradient(135deg, #1c1c1e 0%, #2c2c2e 100%)",
    leftColor: "#007aff",
    rightColor: "#34c759",
    accentColor: "#ff3b30",
    titleBarColor: "linear-gradient(135deg, #f5f5f7 0%, #e5e5ea 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1c1c1e 0%, #2c2c2e 100%)",
    titleTextColor: "#1d1d1f",
    titleTextDarkColor: "#f5f5f7",
    category: "brand"
  },
  google: {
    name: "\u{1F50D} \u8C37\u6B4C\u6D3B\u529B",
    background: "linear-gradient(135deg, #4285f4 0%, #34a853 25%, #fbbc05 50%, #ea4335 75%, #9aa0a6 100%)",
    darkBackground: "linear-gradient(135deg, #1a73e8 0%, #137333 25%, #f9ab00 50%, #d33b01 75%, #5f6368 100%)",
    leftColor: "#4285f4",
    rightColor: "#ea4335",
    accentColor: "#fbbc05",
    titleBarColor: "linear-gradient(135deg, #4285f4 0%, #34a853 33%, #fbbc05 66%, #ea4335 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1a73e8 0%, #137333 33%, #f9ab00 66%, #d33b01 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#fbbc05",
    category: "brand"
  },
  netflix: {
    name: "\u{1F3AC} \u5948\u98DE\u7EA2\u9ED1",
    background: "linear-gradient(135deg, #e50914 0%, #221f1f 50%, #f5f5f1 100%)",
    darkBackground: "linear-gradient(135deg, #000000 0%, #e50914 50%, #221f1f 100%)",
    leftColor: "#e50914",
    rightColor: "#221f1f",
    accentColor: "#f5f5f1",
    titleBarColor: "linear-gradient(135deg, #e50914 0%, #221f1f 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #000000 0%, #e50914 50%, #221f1f 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#e50914",
    category: "brand"
  },
  // 🌃 科技未来系列
  cyberpunk: {
    name: "\u{1F303} \u8D5B\u535A\u670B\u514B2077",
    background: "linear-gradient(135deg, #0A0A0A 0%, #001122 20%, #00FFFF 35%, #FF0080 50%, #FFFF00 65%, #001122 80%, #0A0A0A 100%)",
    darkBackground: "linear-gradient(135deg, #000000 0%, #0D1B2A 25%, #00FFFF 40%, #FF0080 55%, #FFFF00 70%, #0D1B2A 85%, #000000 100%)",
    leftColor: "#00FFFF",
    rightColor: "#FF0080",
    accentColor: "#FFFF00",
    titleBarColor: "linear-gradient(135deg, #001122 0%, #00FFFF 50%, #FF0080 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #000000 0%, #0D1B2A 50%, #001122 100%)",
    titleTextColor: "#00FFFF",
    titleTextDarkColor: "#FFFF00",
    category: "tech"
  },
  matrix: {
    name: "\u{1F48A} \u9ED1\u5BA2\u5E1D\u56FD",
    background: "linear-gradient(135deg, #000000 0%, #003300 50%, #00ff00 100%)",
    darkBackground: "linear-gradient(135deg, #000000 0%, #001100 50%, #003300 100%)",
    leftColor: "#00ff00",
    rightColor: "#008000",
    accentColor: "#00ffff",
    titleBarColor: "linear-gradient(135deg, #000000 0%, #003300 50%, #00ff00 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #000000 0%, #001100 50%, #003300 100%)",
    titleTextColor: "#00ff00",
    titleTextDarkColor: "#00ffff",
    category: "tech"
  },
  neon: {
    name: "\u{1F4A1} \u9713\u8679\u90FD\u5E02",
    background: "linear-gradient(135deg, #ff006e 0%, #8338ec 25%, #3a86ff 50%, #06ffa5 75%, #ffbe0b 100%)",
    darkBackground: "linear-gradient(135deg, #1a0033 0%, #2d1b69 25%, #1e3a8a 50%, #064e3b 75%, #7c2d12 100%)",
    leftColor: "#ff006e",
    rightColor: "#06ffa5",
    accentColor: "#ffbe0b",
    titleBarColor: "linear-gradient(135deg, #ff006e 0%, #8338ec 33%, #3a86ff 66%, #06ffa5 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1a0033 0%, #2d1b69 33%, #1e3a8a 66%, #064e3b 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#ffbe0b",
    category: "tech"
  },
  // 🎨 设计系统系列
  material: {
    name: "\u{1F3A8} Material Design",
    background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
    darkBackground: "linear-gradient(135deg, #434343 0%, #000000 100%)",
    leftColor: "#2196f3",
    rightColor: "#9c27b0",
    accentColor: "#ff5722",
    titleBarColor: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #434343 0%, #000000 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#ff5722",
    category: "design"
  },
  fluent: {
    name: "\u{1FA9F} \u5FAE\u8F6F\u6D41\u7545",
    background: "linear-gradient(135deg, #0078d4 0%, #106ebe 25%, #005a9e 50%, #004578 75%, #003d5b 100%)",
    darkBackground: "linear-gradient(135deg, #1b1b1b 0%, #2d2d30 25%, #3e3e42 50%, #4f4f55 75%, #605f64 100%)",
    leftColor: "#0078d4",
    rightColor: "#005a9e",
    accentColor: "#00bcf2",
    titleBarColor: "linear-gradient(135deg, #0078d4 0%, #106ebe 50%, #005a9e 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1b1b1b 0%, #3e3e42 50%, #605f64 100%)",
    titleTextColor: "#ffffff",
    titleTextDarkColor: "#00bcf2",
    category: "design"
  },
  // 🌸 季节情感系列
  sakura: {
    name: "\u{1F338} \u6A31\u82B1\u6625\u65E5",
    background: "linear-gradient(135deg, #ffecd2 0%, #fcb69f 50%, #ff9a9e 100%)",
    darkBackground: "linear-gradient(135deg, #2c1810 0%, #8b4513 50%, #654321 100%)",
    leftColor: "#ffb3d9",
    rightColor: "#ff69b4",
    accentColor: "#ff1493",
    titleBarColor: "linear-gradient(135deg, #ffecd2 0%, #fcb69f 50%, #ff9a9e 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #2c1810 0%, #8b4513 50%, #654321 100%)",
    titleTextColor: "#8b4513",
    titleTextDarkColor: "#ff9a9e",
    category: "season"
  },
  autumn: {
    name: "\u{1F342} \u79CB\u65E5\u67AB\u53F6",
    background: "linear-gradient(135deg, #ff9068 0%, #fd746c 25%, #ff6b6b 50%, #feca57 75%, #ff9ff3 100%)",
    darkBackground: "linear-gradient(135deg, #8b4513 0%, #a0522d 25%, #cd853f 50%, #daa520 75%, #b8860b 100%)",
    leftColor: "#ff6b6b",
    rightColor: "#feca57",
    accentColor: "#ff9068",
    titleBarColor: "linear-gradient(135deg, #ff9068 0%, #fd746c 33%, #ff6b6b 66%, #feca57 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #8b4513 0%, #a0522d 33%, #cd853f 66%, #daa520 100%)",
    titleTextColor: "#8b4513",
    titleTextDarkColor: "#feca57",
    category: "season"
  },
  winter: {
    name: "\u2744\uFE0F \u51AC\u65E5\u96EA\u5883",
    background: "linear-gradient(135deg, #e6f3ff 0%, #cce7ff 25%, #b3daff 50%, #99cdff 75%, #80c1ff 100%)",
    darkBackground: "linear-gradient(135deg, #1a1a2e 0%, #16213e 25%, #0f3460 50%, #083344 75%, #041e2a 100%)",
    leftColor: "#87ceeb",
    rightColor: "#4682b4",
    accentColor: "#00bfff",
    titleBarColor: "linear-gradient(135deg, #e6f3ff 0%, #cce7ff 33%, #b3daff 66%, #80c1ff 100%)",
    titleBarDarkColor: "linear-gradient(135deg, #1a1a2e 0%, #16213e 33%, #0f3460 66%, #041e2a 100%)",
    titleTextColor: "#0f3460",
    titleTextDarkColor: "#80c1ff",
    category: "season"
  }
};

// src/settingTab.ts
var import_obsidian = require("obsidian");
var ChatStyleSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    const titleEl = containerEl.createEl("div", { cls: "chatstyle-settings-title" });
    titleEl.createEl("h1", { text: "\u{1F3A8} ChatStyle \u63D2\u4EF6\u8BBE\u7F6E" });
    titleEl.createEl("p", {
      text: "\u4E2A\u6027\u5316\u4F60\u7684\u804A\u5929\u754C\u9762\uFF0C\u6253\u9020\u72EC\u7279\u7684\u89C6\u89C9\u4F53\u9A8C",
      cls: "chatstyle-settings-subtitle"
    });
    this.addCustomStyles();
    this.createSectionHeader(containerEl, "\u{1F3AD} \u4E3B\u9898\u9884\u8BBE", "\u5FEB\u901F\u5E94\u7528\u9884\u8BBE\u4E3B\u9898\u98CE\u683C");
    new import_obsidian.Setting(containerEl).setName("\u{1F3A8} \u6574\u4F53\u4E3B\u9898\u9884\u8BBE").setDesc("\u9009\u62E9\u4E00\u4E2A\u9884\u8BBE\u4E3B\u9898\uFF0C\u5FEB\u901F\u5207\u6362\u804A\u5929\u7A97\u53E3\u7684\u6574\u4F53\u98CE\u683C").addDropdown((dropdown) => {
      for (const key in PRESET_THEMES) {
        dropdown.addOption(key, PRESET_THEMES[key].name);
      }
      dropdown.setValue(this.plugin.settings.currentPreset).onChange(async (value) => {
        if (value && PRESET_THEMES[value]) {
          await this.plugin.applyPreset(value);
          this.display();
        }
      });
    });
    this.createSectionHeader(containerEl, "\u{1F4CB} \u6807\u9898\u680F\u8BBE\u7F6E", "\u81EA\u5B9A\u4E49\u6807\u9898\u680F\u7684\u5916\u89C2\u548C\u5B57\u4F53");
    new import_obsidian.Setting(containerEl).setName("\u{1F39B}\uFE0F \u542F\u7528\u6807\u9898\u680F\u81EA\u5B9A\u4E49").setDesc("\u5F00\u542F\u540E\u53EF\u4EE5\u81EA\u5B9A\u4E49\u6807\u9898\u680F\u7684\u989C\u8272\u3001\u5B57\u4F53\u7B49\u5916\u89C2\u8BBE\u7F6E").addToggle((toggle) => toggle.setValue(this.plugin.settings.enableCustomTitleBar).onChange(async (value) => {
      this.plugin.settings.enableCustomTitleBar = value;
      await this.plugin.saveSettings();
      this.display();
    }));
    if (this.plugin.settings.enableCustomTitleBar) {
      this.createSubSectionHeader(containerEl, "\u{1F3A8} \u914D\u8272\u9884\u8BBE");
      new import_obsidian.Setting(containerEl).setName("\u{1F4CB} \u6807\u9898\u680F\u914D\u8272\u65B9\u6848").setDesc("\u9009\u62E9\u9884\u8BBE\u914D\u8272\u65B9\u6848\u6216\u81EA\u5B9A\u4E49\u914D\u7F6E").addDropdown((dropdown) => {
        dropdown.addOption("custom", "\u{1F3A8} \u81EA\u5B9A\u4E49\u914D\u7F6E");
        dropdown.addOption("", "--- \u{1F90D} \u6D45\u8272\u7CFB\u5217 ---");
        dropdown.addOption("light_minimal", TITLE_BAR_PRESETS.light_minimal.name);
        dropdown.addOption("light_blue", TITLE_BAR_PRESETS.light_blue.name);
        dropdown.addOption("light_green", TITLE_BAR_PRESETS.light_green.name);
        dropdown.addOption("light_purple", TITLE_BAR_PRESETS.light_purple.name);
        dropdown.addOption("light_orange", TITLE_BAR_PRESETS.light_orange.name);
        dropdown.addOption("light_pink", TITLE_BAR_PRESETS.light_pink.name);
        dropdown.addOption("light_teal", TITLE_BAR_PRESETS.light_teal.name);
        dropdown.addOption("light_amber", TITLE_BAR_PRESETS.light_amber.name);
        dropdown.addOption("", "--- \u{1F5A4} \u6DF1\u8272\u7CFB\u5217 ---");
        dropdown.addOption("dark_minimal", TITLE_BAR_PRESETS.dark_minimal.name);
        dropdown.addOption("dark_blue", TITLE_BAR_PRESETS.dark_blue.name);
        dropdown.addOption("dark_purple", TITLE_BAR_PRESETS.dark_purple.name);
        dropdown.addOption("dark_red", TITLE_BAR_PRESETS.dark_red.name);
        dropdown.addOption("dark_green", TITLE_BAR_PRESETS.dark_green.name);
        dropdown.addOption("dark_orange", TITLE_BAR_PRESETS.dark_orange.name);
        dropdown.addOption("dark_indigo", TITLE_BAR_PRESETS.dark_indigo.name);
        dropdown.addOption("dark_brown", TITLE_BAR_PRESETS.dark_brown.name);
        dropdown.addOption("", "--- \u{1F305} \u6E10\u53D8\u7CFB\u5217 ---");
        dropdown.addOption("gradient_sunset", TITLE_BAR_PRESETS.gradient_sunset.name);
        dropdown.addOption("gradient_ocean", TITLE_BAR_PRESETS.gradient_ocean.name);
        dropdown.addOption("gradient_forest", TITLE_BAR_PRESETS.gradient_forest.name);
        dropdown.addOption("gradient_aurora", TITLE_BAR_PRESETS.gradient_aurora.name);
        dropdown.addOption("", "--- \u2728 \u7279\u6B8A\u6548\u679C ---");
        dropdown.addOption("glassmorphism_light", TITLE_BAR_PRESETS.glassmorphism_light.name);
        dropdown.addOption("glassmorphism_dark", TITLE_BAR_PRESETS.glassmorphism_dark.name);
        dropdown.addOption("neon_cyan", TITLE_BAR_PRESETS.neon_cyan.name);
        dropdown.addOption("neon_pink", TITLE_BAR_PRESETS.neon_pink.name);
        dropdown.setValue("custom").onChange(async (value) => {
          if (value !== "custom" && value !== "" && TITLE_BAR_PRESETS[value]) {
            await this.plugin.applyTitleBarPreset(value);
            this.display();
          }
        });
      });
      this.createSubSectionHeader(containerEl, "\u{1F3A8} \u80CC\u666F\u989C\u8272");
      new import_obsidian.Setting(containerEl).setName("\u2600\uFE0F \u6D45\u8272\u6A21\u5F0F\u80CC\u666F").setDesc("\u6D45\u8272\u4E3B\u9898\u4E0B\u7684\u6807\u9898\u680F\u80CC\u666F\u8272\uFF08\u652F\u6301\u6E10\u53D8\u548C\u900F\u660E\u5EA6\uFF09").addColorPicker((color) => color.setValue(this.extractSolidColor(this.plugin.settings.titleBarColor, "#ffffff")).onChange(async (value) => {
        this.plugin.settings.titleBarColor = value;
        await this.plugin.saveSettings();
      })).addText((text) => text.setPlaceholder("\u5982\uFF1Argba(255,255,255,0.9) \u6216 linear-gradient(...)").setValue(this.plugin.settings.titleBarColor).onChange(async (value) => {
        this.plugin.settings.titleBarColor = value;
        await this.plugin.saveSettings();
      }));
      new import_obsidian.Setting(containerEl).setName("\u{1F319} \u6DF1\u8272\u6A21\u5F0F\u80CC\u666F").setDesc("\u6DF1\u8272\u4E3B\u9898\u4E0B\u7684\u6807\u9898\u680F\u80CC\u666F\u8272\uFF08\u652F\u6301\u6E10\u53D8\u548C\u900F\u660E\u5EA6\uFF09").addColorPicker((color) => color.setValue(this.extractSolidColor(this.plugin.settings.titleBarDarkColor, "#1e1e1e")).onChange(async (value) => {
        this.plugin.settings.titleBarDarkColor = value;
        await this.plugin.saveSettings();
      })).addText((text) => text.setPlaceholder("\u5982\uFF1Argba(30,30,30,0.9) \u6216 linear-gradient(...)").setValue(this.plugin.settings.titleBarDarkColor).onChange(async (value) => {
        this.plugin.settings.titleBarDarkColor = value;
        await this.plugin.saveSettings();
      }));
      this.createSubSectionHeader(containerEl, "\u270F\uFE0F \u6587\u5B57\u989C\u8272");
      new import_obsidian.Setting(containerEl).setName("\u2600\uFE0F \u6D45\u8272\u6A21\u5F0F\u6587\u5B57").setDesc("\u6D45\u8272\u4E3B\u9898\u4E0B\u7684\u6807\u9898\u6587\u5B57\u989C\u8272").addColorPicker((color) => color.setValue(this.plugin.settings.titleTextColor).onChange(async (value) => {
        this.plugin.settings.titleTextColor = value;
        await this.plugin.saveSettings();
      }));
      new import_obsidian.Setting(containerEl).setName("\u{1F319} \u6DF1\u8272\u6A21\u5F0F\u6587\u5B57").setDesc("\u6DF1\u8272\u4E3B\u9898\u4E0B\u7684\u6807\u9898\u6587\u5B57\u989C\u8272").addColorPicker((color) => color.setValue(this.plugin.settings.titleTextDarkColor).onChange(async (value) => {
        this.plugin.settings.titleTextDarkColor = value;
        await this.plugin.saveSettings();
      }));
    }
    this.createSectionHeader(containerEl, "\u{1F524} \u5B57\u4F53\u4E0E\u989C\u8272", "\u7EDF\u4E00\u8BBE\u7F6E\u5B57\u4F53\u6837\u5F0F\u548C\u6587\u5B57\u989C\u8272");
    new import_obsidian.Setting(containerEl).setName("\u{1F4CF} \u5B57\u4F53\u5927\u5C0F").setDesc("\u8BBE\u7F6E\u6574\u4F53\u5B57\u4F53\u5927\u5C0F\uFF0C\u540C\u65F6\u5F71\u54CD\u6807\u9898\u680F\u548C\u804A\u5929\u5185\u5BB9").addSlider((slider) => slider.setLimits(12, 28, 1).setValue(this.plugin.settings.fontSize).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.fontSize = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F4AA} \u5B57\u4F53\u7C97\u7EC6").setDesc("\u8BBE\u7F6E\u6587\u5B57\u7684\u5B57\u4F53\u7C97\u7EC6\u7A0B\u5EA6").addDropdown((dropdown) => dropdown.addOption("300", "\u7EC6\u4F53 (300)").addOption("400", "\u6B63\u5E38 (400)").addOption("500", "\u4E2D\u7B49 (500)").addOption("600", "\u534A\u7C97 (600)").addOption("700", "\u7C97\u4F53 (700)").addOption("800", "\u7279\u7C97 (800)").setValue(this.plugin.settings.fontWeight).onChange(async (value) => {
      this.plugin.settings.fontWeight = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F3AD} \u5B57\u4F53\u65CF").setDesc("\u9009\u62E9\u5B57\u4F53\u65CF\uFF0C\u5F71\u54CD\u6574\u4F53\u89C6\u89C9\u98CE\u683C").addDropdown((dropdown) => {
      dropdown.addOption("custom", "\u{1F3A8} \u81EA\u5B9A\u4E49\u8F93\u5165");
      dropdown.addOption('-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif', "\u{1F5A5}\uFE0F \u7CFB\u7EDF\u9ED8\u8BA4");
      dropdown.addOption('"Georgia", "Times New Roman", serif', "\u{1F4D6} \u4F18\u96C5\u886C\u7EBF");
      dropdown.addOption('"Helvetica Neue", "Arial", sans-serif', "\u{1F524} \u7ECF\u5178\u65E0\u886C\u7EBF");
      dropdown.addOption('"Source Sans Pro", "Segoe UI", sans-serif', "\u{1F4F1} \u73B0\u4EE3\u6E05\u6670");
      dropdown.addOption('"Noto Sans", "DejaVu Sans", sans-serif', "\u{1F30D} \u56FD\u9645\u901A\u7528");
      dropdown.addOption('"Roboto", "Oxygen", sans-serif', "\u{1F916} \u79D1\u6280\u611F");
      dropdown.addOption('"Open Sans", "Verdana", sans-serif', "\u{1F441}\uFE0F \u6613\u8BFB\u6027");
      dropdown.addOption('"Comic Sans MS", "Trebuchet MS", cursive', "\u{1F388} \u53EF\u7231\u624B\u5199");
      dropdown.addOption('"Playfair Display", "Times New Roman", serif', "\u{1F451} \u534E\u4E3D\u88C5\u9970");
      dropdown.addOption('"Roboto Condensed", "Arial Narrow", sans-serif', "\u{1F4CF} \u7D27\u51D1\u73B0\u4EE3");
      dropdown.addOption('"Crimson Text", "Times New Roman", serif', "\u{1F4DA} \u5B66\u672F\u98CE\u683C");
      dropdown.addOption('"Impact", "Arial Black", sans-serif', "\u{1F4A5} \u5F3A\u70C8\u51B2\u51FB");
      dropdown.addOption('"Merriweather", "Georgia", serif', "\u{1F33F} \u6E29\u548C\u9605\u8BFB");
      dropdown.addOption('"Oswald", "Arial", sans-serif', "\u{1F3D7}\uFE0F \u5EFA\u7B51\u98CE\u683C");
      dropdown.addOption('"Lora", "Times New Roman", serif', "\u270D\uFE0F \u4E66\u6CD5\u98CE\u683C");
      dropdown.addOption('"Dancing Script", "Brush Script MT", cursive', "\u{1F483} \u821E\u8E48\u624B\u5199");
      dropdown.addOption('"Quicksand", "Verdana", sans-serif', "\u{1F30A} \u8F7B\u5FEB\u5706\u6DA6");
      dropdown.addOption('"Cabin", "Trebuchet MS", sans-serif', "\u{1F3E0} \u6E29\u99A8\u8212\u9002");
      dropdown.addOption('"Orbitron", "Courier New", monospace', "\u{1F680} \u79D1\u6280\u672A\u6765");
      dropdown.addOption('"Inter", "Helvetica Neue", sans-serif', "\u{1F3AF} \u73B0\u4EE3\u7B80\u6D01");
      const currentFont = this.plugin.settings.fontFamily;
      const isCustom = !dropdown.selectEl.querySelector(`option[value="${currentFont}"]`);
      dropdown.setValue(isCustom ? "custom" : currentFont);
      dropdown.onChange(async (value) => {
        if (value !== "custom") {
          this.plugin.settings.fontFamily = value;
          await this.plugin.saveSettings();
          this.display();
        }
      });
    }).addText((text) => text.setPlaceholder('\u8F93\u5165\u81EA\u5B9A\u4E49\u5B57\u4F53\u65CF\uFF0C\u5982 "Arial", sans-serif').setValue(this.plugin.settings.fontFamily).onChange(async (value) => {
      this.plugin.settings.fontFamily = value;
      await this.plugin.saveSettings();
    }));
    this.createSubSectionHeader(containerEl, "\u{1F3A8} \u804A\u5929\u5185\u5BB9\u989C\u8272");
    new import_obsidian.Setting(containerEl).setName("\u{1F464} \u7528\u6237\u6D88\u606F\u989C\u8272").setDesc("\u8BBE\u7F6E\u7528\u6237\u53D1\u9001\u6D88\u606F\u7684\u6587\u5B57\u989C\u8272").addColorPicker((color) => color.setValue(this.plugin.settings.userMessageColor).onChange(async (value) => {
      this.plugin.settings.userMessageColor = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301 CSS \u989C\u8272\u503C\uFF0C\u5982 #ffffff \u6216 rgba(255,255,255,0.9)").setValue(this.plugin.settings.userMessageColor).onChange(async (value) => {
      this.plugin.settings.userMessageColor = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F916} \u52A9\u624B\u6D88\u606F\u989C\u8272").setDesc("\u8BBE\u7F6EAI\u52A9\u624B\u56DE\u590D\u6D88\u606F\u7684\u6587\u5B57\u989C\u8272").addColorPicker((color) => color.setValue(this.plugin.settings.assistantMessageColor).onChange(async (value) => {
      this.plugin.settings.assistantMessageColor = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301 CSS \u989C\u8272\u503C\uFF0C\u5982 #333333 \u6216 rgba(51,51,51,0.9)").setValue(this.plugin.settings.assistantMessageColor).onChange(async (value) => {
      this.plugin.settings.assistantMessageColor = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u2699\uFE0F \u7CFB\u7EDF\u6D88\u606F\u989C\u8272").setDesc("\u8BBE\u7F6E\u7CFB\u7EDF\u63D0\u793A\u6D88\u606F\u7684\u6587\u5B57\u989C\u8272").addColorPicker((color) => color.setValue(this.plugin.settings.systemMessageColor).onChange(async (value) => {
      this.plugin.settings.systemMessageColor = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301 CSS \u989C\u8272\u503C\uFF0C\u5982 #666666 \u6216 rgba(102,102,102,0.9)").setValue(this.plugin.settings.systemMessageColor).onChange(async (value) => {
      this.plugin.settings.systemMessageColor = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u{1F4AD} \u6C14\u6CE1\u6837\u5F0F", "\u81EA\u5B9A\u4E49\u6D88\u606F\u6C14\u6CE1\u7684\u5916\u89C2\u548C\u80CC\u666F\u8272");
    this.createSubSectionHeader(containerEl, "\u{1F518} \u6C14\u6CE1\u5F62\u72B6");
    new import_obsidian.Setting(containerEl).setName("\u{1F518} \u6C14\u6CE1\u5706\u89D2").setDesc("\u8BBE\u7F6E\u6D88\u606F\u6C14\u6CE1\u7684\u5706\u89D2\u5927\u5C0F\uFF0C\u5F71\u54CD\u6574\u4F53\u89C6\u89C9\u98CE\u683C").addSlider((slider) => slider.setLimits(0, 50, 1).setValue(this.plugin.settings.bubbleRadius).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.bubbleRadius = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F32B}\uFE0F \u6C14\u6CE1\u900F\u660E\u5EA6").setDesc("\u8C03\u6574\u6D88\u606F\u6C14\u6CE1\u7684\u900F\u660E\u5EA6\uFF0C0\u4E3A\u5B8C\u5168\u900F\u660E\uFF0C1\u4E3A\u4E0D\u900F\u660E").addSlider((slider) => slider.setLimits(0, 1, 0.05).setValue(this.plugin.settings.bubbleOpacity).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.bubbleOpacity = value;
      await this.plugin.saveSettings();
    }));
    this.createSubSectionHeader(containerEl, "\u{1F3A8} \u6C14\u6CE1\u80CC\u666F\u8272");
    new import_obsidian.Setting(containerEl).setName("\u{1F464} \u7528\u6237\u6D88\u606F\u80CC\u666F").setDesc("\u8BBE\u7F6E\u7528\u6237\u53D1\u9001\u6D88\u606F\u7684\u6C14\u6CE1\u80CC\u666F\u8272").addColorPicker((color) => color.setValue(this.extractSolidColor(this.plugin.settings.userMessageBg, "#007bff")).onChange(async (value) => {
      this.plugin.settings.userMessageBg = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301\u6E10\u53D8\uFF0C\u5982 linear-gradient(135deg, #667eea 0%, #764ba2 100%)").setValue(this.plugin.settings.userMessageBg).onChange(async (value) => {
      this.plugin.settings.userMessageBg = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F916} \u52A9\u624B\u6D88\u606F\u80CC\u666F").setDesc("\u8BBE\u7F6EAI\u52A9\u624B\u56DE\u590D\u6D88\u606F\u7684\u6C14\u6CE1\u80CC\u666F\u8272").addColorPicker((color) => color.setValue(this.extractSolidColor(this.plugin.settings.assistantMessageBg, "#f8f9fa")).onChange(async (value) => {
      this.plugin.settings.assistantMessageBg = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301\u6E10\u53D8\uFF0C\u5982 linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)").setValue(this.plugin.settings.assistantMessageBg).onChange(async (value) => {
      this.plugin.settings.assistantMessageBg = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u2699\uFE0F \u7CFB\u7EDF\u6D88\u606F\u80CC\u666F").setDesc("\u8BBE\u7F6E\u7CFB\u7EDF\u63D0\u793A\u6D88\u606F\u7684\u6C14\u6CE1\u80CC\u666F\u8272").addColorPicker((color) => color.setValue(this.extractSolidColor(this.plugin.settings.systemMessageBg, "#fff3cd")).onChange(async (value) => {
      this.plugin.settings.systemMessageBg = value;
      await this.plugin.saveSettings();
    })).addText((text) => text.setPlaceholder("\u652F\u6301\u6E10\u53D8\uFF0C\u5982 linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%)").setValue(this.plugin.settings.systemMessageBg).onChange(async (value) => {
      this.plugin.settings.systemMessageBg = value;
      await this.plugin.saveSettings();
    }));
    this.createSubSectionHeader(containerEl, "\u2728 \u6C14\u6CE1\u6548\u679C");
    new import_obsidian.Setting(containerEl).setName("\u{1F31F} \u542F\u7528\u6C14\u6CE1\u9634\u5F71").setDesc("\u4E3A\u6D88\u606F\u6C14\u6CE1\u6DFB\u52A0\u67D4\u548C\u7684\u9634\u5F71\u6548\u679C\uFF0C\u589E\u5F3A\u7ACB\u4F53\u611F").addToggle((toggle) => toggle.setValue(this.plugin.settings.bubbleShadow).onChange(async (value) => {
      this.plugin.settings.bubbleShadow = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u2728 \u542F\u7528\u6C14\u6CE1\u53D1\u5149").setDesc("\u4E3A\u6D88\u606F\u6C14\u6CE1\u6DFB\u52A0\u4E0E\u4E3B\u9898\u8272\u4E00\u81F4\u7684\u53D1\u5149\u6548\u679C").addToggle((toggle) => toggle.setValue(this.plugin.settings.bubbleGlow).onChange(async (value) => {
      this.plugin.settings.bubbleGlow = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F3AD} \u542F\u7528\u6C14\u6CE1\u6E10\u53D8").setDesc("\u4E3A\u6D88\u606F\u6C14\u6CE1\u542F\u7528\u6E10\u53D8\u80CC\u666F\u6548\u679C").addToggle((toggle) => toggle.setValue(this.plugin.settings.bubbleGradient).onChange(async (value) => {
      this.plugin.settings.bubbleGradient = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u{1F464} \u5934\u50CF\u8BBE\u7F6E", "\u81EA\u5B9A\u4E49\u7528\u6237\u5934\u50CF\u7684\u5927\u5C0F\u548C\u6548\u679C");
    new import_obsidian.Setting(containerEl).setName("\u{1F4CF} \u5934\u50CF\u5927\u5C0F").setDesc("\u8BBE\u7F6E\u5934\u50CF\u7684\u76F4\u5F84\u5927\u5C0F").addSlider((slider) => slider.setLimits(20, 80, 1).setValue(this.plugin.settings.avatarSize).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.avatarSize = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F532} \u542F\u7528\u5934\u50CF\u8FB9\u6846").setDesc("\u4E3A\u5934\u50CF\u6DFB\u52A0\u4E00\u4E2A\u534A\u900F\u660E\u7684\u767D\u8272\u8FB9\u6846").addToggle((toggle) => toggle.setValue(this.plugin.settings.avatarBorder).onChange(async (value) => {
      this.plugin.settings.avatarBorder = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u2728 \u542F\u7528\u5934\u50CF\u53D1\u5149").setDesc("\u4E3A\u5934\u50CF\u6DFB\u52A0\u4E0E\u4E3B\u9898\u8272\u4E00\u81F4\u7684\u53D1\u5149\u6548\u679C").addToggle((toggle) => toggle.setValue(this.plugin.settings.avatarGlow).onChange(async (value) => {
      this.plugin.settings.avatarGlow = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u{1F4D0} \u5E03\u5C40\u95F4\u8DDD", "\u8C03\u6574\u6D88\u606F\u4E4B\u95F4\u7684\u95F4\u8DDD\u548C\u5185\u8FB9\u8DDD");
    new import_obsidian.Setting(containerEl).setName("\u{1F4CF} \u6D88\u606F\u95F4\u8DDD").setDesc("\u8BBE\u7F6E\u4E0D\u540C\u6D88\u606F\u4E4B\u95F4\u7684\u5782\u76F4\u95F4\u8DDD").addSlider((slider) => slider.setLimits(0, 30, 1).setValue(this.plugin.settings.messageSpacing).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.messageSpacing = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F4E6} \u6C14\u6CE1\u5185\u8FB9\u8DDD").setDesc("\u8BBE\u7F6E\u6D88\u606F\u6C14\u6CE1\u5185\u90E8\u7684\u586B\u5145\u7A7A\u95F4").addSlider((slider) => slider.setLimits(8, 24, 1).setValue(this.plugin.settings.bubblePadding).setDynamicTooltip().onChange(async (value) => {
      this.plugin.settings.bubblePadding = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u2699\uFE0F \u529F\u80FD\u5F00\u5173", "\u542F\u7528\u6216\u7981\u7528\u5404\u79CD\u4EA4\u4E92\u529F\u80FD");
    new import_obsidian.Setting(containerEl).setName("\u{1F3AC} \u542F\u7528\u52A8\u753B\u6548\u679C").setDesc("\u4E3A\u6D88\u606F\u7684\u51FA\u73B0\u548C\u4EA4\u4E92\u6DFB\u52A0\u5E73\u6ED1\u7684\u52A8\u753B\u6548\u679C").addToggle((toggle) => toggle.setValue(this.plugin.settings.enableAnimations).onChange(async (value) => {
      this.plugin.settings.enableAnimations = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F517} \u542F\u7528\u5F15\u7528\u8DF3\u8F6C").setDesc("\u70B9\u51FB\u5F15\u7528\u6D88\u606F\u65F6\uFF0C\u9875\u9762\u5C06\u5E73\u6ED1\u6EDA\u52A8\u5230\u88AB\u5F15\u7528\u7684\u539F\u59CB\u6D88\u606F\u5904").addToggle((toggle) => toggle.setValue(this.plugin.settings.enableQuoteJump).onChange(async (value) => {
      this.plugin.settings.enableQuoteJump = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F550} \u663E\u793A\u65F6\u95F4\u6233").setDesc("\u5728\u6BCF\u6761\u6D88\u606F\u4E0B\u65B9\u663E\u793A\u5176\u53D1\u9001\u65F6\u95F4").addToggle((toggle) => toggle.setValue(this.plugin.settings.showTimestamp).onChange(async (value) => {
      this.plugin.settings.showTimestamp = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u{1F4BB} \u4EE3\u7801\u5757\u8BBE\u7F6E", "\u81EA\u5B9A\u4E49\u4EE3\u7801\u5757\u7684\u663E\u793A\u548C\u529F\u80FD");
    new import_obsidian.Setting(containerEl).setName("\u{1F680} \u542F\u7528\u4EE3\u7801\u5757\u589E\u5F3A").setDesc("\u4E3A\u804A\u5929\u6D88\u606F\u4E2D\u7684\u4EE3\u7801\u5757\u63D0\u4F9B\u8BED\u6CD5\u9AD8\u4EAE\u3001\u8BED\u8A00\u6807\u7B7E\u548C\u590D\u5236\u6309\u94AE\u7B49\u529F\u80FD").addToggle((toggle) => toggle.setValue(this.plugin.settings.codeBlockEnhanced).onChange(async (value) => {
      this.plugin.settings.codeBlockEnhanced = value;
      await this.plugin.saveSettings();
      this.display();
    }));
    if (this.plugin.settings.codeBlockEnhanced) {
      this.createSubSectionHeader(containerEl, "\u{1F527} \u4EE3\u7801\u5757\u529F\u80FD");
      new import_obsidian.Setting(containerEl).setName("\u{1F3F7}\uFE0F \u663E\u793A\u8BED\u8A00\u6807\u7B7E").setDesc("\u5728\u4EE3\u7801\u5757\u7684\u53F3\u4E0A\u89D2\u663E\u793A\u5176\u7F16\u7A0B\u8BED\u8A00\u540D\u79F0").addToggle((toggle) => toggle.setValue(this.plugin.settings.codeBlockShowLanguage).onChange(async (value) => {
        this.plugin.settings.codeBlockShowLanguage = value;
        await this.plugin.saveSettings();
      }));
      new import_obsidian.Setting(containerEl).setName("\u{1F4CB} \u663E\u793A\u590D\u5236\u6309\u94AE").setDesc("\u5728\u4EE3\u7801\u5757\u7684\u53F3\u4E0A\u89D2\u6DFB\u52A0\u4E00\u4E2A\u6309\u94AE\uFF0C\u7528\u4E8E\u4E00\u952E\u590D\u5236\u4EE3\u7801\u5185\u5BB9").addToggle((toggle) => toggle.setValue(this.plugin.settings.codeBlockShowCopyButton).onChange(async (value) => {
        this.plugin.settings.codeBlockShowCopyButton = value;
        await this.plugin.saveSettings();
      }));
      new import_obsidian.Setting(containerEl).setName("\u{1F3A8} \u4EE3\u7801\u5757\u9AD8\u4EAE\u4E3B\u9898").setDesc("\u4E3A\u4EE3\u7801\u5757\u9009\u62E9\u4E00\u4E2A\u8BED\u6CD5\u9AD8\u4EAE\u4E3B\u9898").addDropdown((dropdown) => dropdown.addOption("default", "\u{1F524} \u9ED8\u8BA4\u4E3B\u9898").addOption("github", "\u{1F419} GitHub \u98CE\u683C").addOption("vscode", "\u{1F4BB} VS Code \u98CE\u683C").addOption("dracula", "\u{1F9DB} Dracula \u98CE\u683C").setValue(this.plugin.settings.codeBlockTheme).onChange(async (value) => {
        this.plugin.settings.codeBlockTheme = value;
        await this.plugin.saveSettings();
      }));
    }
    this.createSectionHeader(containerEl, "\u{1F527} \u9AD8\u7EA7\u8BBE\u7F6E", "\u4E13\u4E1A\u7528\u6237\u7684\u9AD8\u7EA7\u914D\u7F6E\u9009\u9879");
    new import_obsidian.Setting(containerEl).setName("\u{1F3A8} \u81EA\u5B9A\u4E49CSS").setDesc("\u8F93\u5165\u81EA\u5B9A\u4E49CSS\u4EE3\u7801\u6765\u8FDB\u4E00\u6B65\u4E2A\u6027\u5316\u804A\u5929\u754C\u9762").addToggle((toggle) => toggle.setValue(this.plugin.settings.enableCustomCSS).onChange(async (value) => {
      this.plugin.settings.enableCustomCSS = value;
      await this.plugin.saveSettings();
      this.display();
    }));
    if (this.plugin.settings.enableCustomCSS) {
      new import_obsidian.Setting(containerEl).setName("\u{1F4DD} CSS\u4EE3\u7801").setDesc("\u5728\u6B64\u8F93\u5165\u81EA\u5B9A\u4E49CSS\u4EE3\u7801\uFF0C\u5C06\u5E94\u7528\u5230\u804A\u5929\u754C\u9762").addTextArea((text) => text.setPlaceholder("/* \u5728\u6B64\u8F93\u5165CSS\u4EE3\u7801 */\n.chat-message {\n  /* \u81EA\u5B9A\u4E49\u6837\u5F0F */\n}").setValue(this.plugin.settings.customCSS).onChange(async (value) => {
        this.plugin.settings.customCSS = value;
        await this.plugin.saveSettings();
      }));
    }
    new import_obsidian.Setting(containerEl).setName("\u{1F41B} \u8C03\u8BD5\u6A21\u5F0F").setDesc("\u542F\u7528\u8C03\u8BD5\u6A21\u5F0F\uFF0C\u5728\u63A7\u5236\u53F0\u663E\u793A\u8BE6\u7EC6\u7684\u63D2\u4EF6\u8FD0\u884C\u4FE1\u606F").addToggle((toggle) => toggle.setValue(this.plugin.settings.debugMode).onChange(async (value) => {
      this.plugin.settings.debugMode = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u{1F504} \u517C\u5BB9\u6A21\u5F0F").setDesc("\u542F\u7528\u517C\u5BB9\u6A21\u5F0F\uFF0C\u786E\u4FDD\u4E0E\u65E7\u7248\u672CObsidian\u7684\u517C\u5BB9\u6027").addToggle((toggle) => toggle.setValue(this.plugin.settings.legacyMode).onChange(async (value) => {
      this.plugin.settings.legacyMode = value;
      await this.plugin.saveSettings();
    }));
    this.createSectionHeader(containerEl, "\u{1F504} \u91CD\u7F6E\u8BBE\u7F6E", "\u6062\u590D\u9ED8\u8BA4\u914D\u7F6E\u6216\u5BFC\u5165\u5BFC\u51FA\u8BBE\u7F6E");
    new import_obsidian.Setting(containerEl).setName("\u{1F504} \u91CD\u7F6E\u6240\u6709\u8BBE\u7F6E").setDesc("\u5C06\u6240\u6709\u8BBE\u7F6E\u6062\u590D\u4E3A\u9ED8\u8BA4\u503C\uFF08\u6B64\u64CD\u4F5C\u4E0D\u53EF\u64A4\u9500\uFF09").addButton((button) => button.setButtonText("\u91CD\u7F6E\u8BBE\u7F6E").setWarning().onClick(async () => {
      const confirmed = confirm("\u786E\u5B9A\u8981\u91CD\u7F6E\u6240\u6709\u8BBE\u7F6E\u5417\uFF1F\u6B64\u64CD\u4F5C\u4E0D\u53EF\u64A4\u9500\uFF01");
      if (confirmed) {
        Object.assign(this.plugin.settings, {
          ...this.plugin.settings,
          // 保留用户配置文件
          userProfiles: this.plugin.settings.userProfiles
        });
        await this.plugin.saveSettings();
        this.display();
      }
    }));
    const versionEl = containerEl.createEl("div", { cls: "chatstyle-version-info" });
    versionEl.createEl("p", {
      text: `ChatStyle \u63D2\u4EF6\u7248\u672C v${this.plugin.manifest.version}`,
      cls: "chatstyle-version-text"
    });
    versionEl.createEl("p", {
      text: "\u611F\u8C22\u4F7F\u7528 ChatStyle \u63D2\u4EF6\uFF01\u5982\u6709\u95EE\u9898\u8BF7\u8BBF\u95EE GitHub \u4ED3\u5E93\u53CD\u9988\u3002",
      cls: "chatstyle-footer-text"
    });
  }
  // 辅助方法：创建区域标题
  createSectionHeader(containerEl, title, description) {
    const headerEl = containerEl.createEl("div", { cls: "chatstyle-section-header" });
    headerEl.createEl("h2", { text: title, cls: "chatstyle-section-title" });
    headerEl.createEl("p", { text: description, cls: "chatstyle-section-desc" });
  }
  // 辅助方法：创建子区域标题
  createSubSectionHeader(containerEl, title) {
    const subHeaderEl = containerEl.createEl("div", { cls: "chatstyle-subsection-header" });
    subHeaderEl.createEl("h4", { text: title, cls: "chatstyle-subsection-title" });
  }
  // 辅助方法：从复杂颜色值中提取纯色
  extractSolidColor(colorValue, fallback) {
    if (colorValue.includes("rgba") || colorValue.includes("linear-gradient")) {
      return fallback;
    }
    return colorValue;
  }
  // 辅助方法：添加自定义样式
  addCustomStyles() {
    const styleEl = document.createElement("style");
    styleEl.textContent = `
			.chatstyle-settings-title {
				text-align: center;
				margin-bottom: 2rem;
				padding: 2rem;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				border-radius: 16px;
				color: white;
				box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
				position: relative;
				overflow: hidden;
			}

			.chatstyle-settings-title::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 50%, rgba(255,255,255,0.1) 100%);
				animation: shimmer 3s ease-in-out infinite;
			}

			@keyframes shimmer {
				0%, 100% { transform: translateX(-100%); }
				50% { transform: translateX(100%); }
			}

			.chatstyle-settings-title h1 {
				margin: 0 0 0.5rem 0;
				font-size: 2rem;
				font-weight: 700;
				text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
				position: relative;
				z-index: 1;
			}

			.chatstyle-settings-subtitle {
				margin: 0;
				opacity: 0.9;
				font-size: 1.1rem;
				position: relative;
				z-index: 1;
			}

			.chatstyle-section-header {
				margin: 2.5rem 0 1.5rem 0;
				padding: 1.5rem;
				background: var(--background-secondary);
				border-radius: 12px;
				border-left: 5px solid var(--interactive-accent);
				box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
				transition: all 0.3s ease;
			}

			.chatstyle-section-header:hover {
				transform: translateY(-2px);
				box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
			}

			.chatstyle-section-title {
				margin: 0 0 0.5rem 0;
				color: var(--text-accent);
				font-size: 1.4rem;
				font-weight: 600;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.chatstyle-section-desc {
				margin: 0;
				color: var(--text-muted);
				font-size: 1rem;
				line-height: 1.5;
			}

			.chatstyle-subsection-header {
				margin: 2rem 0 1rem 0;
				padding: 0.75rem 1rem;
				background: var(--background-modifier-form-field);
				border-radius: 8px;
				border-left: 3px solid var(--text-accent);
			}

			.chatstyle-subsection-title {
				margin: 0;
				color: var(--text-normal);
				font-size: 1.2rem;
				font-weight: 500;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.setting-item {
				border-radius: 8px;
				margin-bottom: 0.75rem;
				padding: 0.5rem;
				transition: all 0.2s ease;
				border: 1px solid transparent;
			}

			.setting-item:hover {
				background-color: var(--background-modifier-hover);
				border-color: var(--background-modifier-border);
				transform: translateX(4px);
			}

			.setting-item-name {
				font-weight: 600;
				color: var(--text-normal);
				font-size: 1rem;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.setting-item-description {
				color: var(--text-muted);
				font-size: 0.9rem;
				line-height: 1.4;
				margin-top: 0.25rem;
			}

			.setting-item-control {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				flex-wrap: wrap;
			}

			.setting-item input[type="color"] {
				width: 40px;
				height: 32px;
				border-radius: 6px;
				border: 2px solid var(--background-modifier-border);
				cursor: pointer;
				transition: all 0.2s ease;
			}

			.setting-item input[type="color"]:hover {
				border-color: var(--interactive-accent);
				transform: scale(1.05);
			}

			.setting-item input[type="text"] {
				flex: 1;
				min-width: 200px;
				padding: 0.5rem;
				border-radius: 6px;
				border: 1px solid var(--background-modifier-border);
				background: var(--background-primary);
				color: var(--text-normal);
				transition: all 0.2s ease;
			}

			.setting-item input[type="text"]:focus {
				border-color: var(--interactive-accent);
				outline: none;
				box-shadow: 0 0 0 2px rgba(var(--interactive-accent-rgb), 0.2);
			}

			.setting-item textarea {
				width: 100%;
				min-height: 120px;
				padding: 0.75rem;
				border-radius: 6px;
				border: 1px solid var(--background-modifier-border);
				background: var(--background-primary);
				color: var(--text-normal);
				font-family: 'Courier New', monospace;
				font-size: 0.9rem;
				resize: vertical;
				transition: all 0.2s ease;
			}

			.setting-item textarea:focus {
				border-color: var(--interactive-accent);
				outline: none;
				box-shadow: 0 0 0 2px rgba(var(--interactive-accent-rgb), 0.2);
			}

			.setting-item .slider {
				flex: 1;
				min-width: 150px;
			}

			.setting-item .dropdown {
				flex: 1;
				min-width: 200px;
			}

			.setting-item .checkbox-container {
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.chatstyle-version-info {
				margin-top: 3rem;
				padding: 1.5rem;
				background: var(--background-secondary);
				border-radius: 12px;
				text-align: center;
				border: 1px solid var(--background-modifier-border);
			}

			.chatstyle-version-text {
				margin: 0 0 0.5rem 0;
				font-weight: 600;
				color: var(--text-accent);
			}

			.chatstyle-footer-text {
				margin: 0;
				color: var(--text-muted);
				font-size: 0.9rem;
			}

			.mod-warning {
				background-color: var(--background-modifier-error) !important;
				color: var(--text-on-accent) !important;
			}

			.mod-warning:hover {
				background-color: var(--background-modifier-error-hover) !important;
			}
		`;
    document.head.appendChild(styleEl);
  }
};

// src/chatRenderer.ts
var import_obsidian2 = require("obsidian");

// src/chatParser.ts
var ChatParser = class {
  static parse(source) {
    const { processedSource, codeBlocks } = this.preprocessNestedCodeBlocks(source);
    const lines = processedSource.split("\n");
    const config = { title: "\u804A\u5929", theme: "" };
    const users = /* @__PURE__ */ new Map();
    const messages = [];
    let messageCounter = 1;
    const messageChunks = [];
    let currentChunk = "";
    for (const line of lines) {
      const trimmedLine = line.trim();
      if (!trimmedLine)
        continue;
      const isNewMessage = this.NEW_MESSAGE_REGEX.test(trimmedLine);
      if (isNewMessage && !trimmedLine.startsWith("#") && !trimmedLine.startsWith("@") || trimmedLine.startsWith("@")) {
        if (currentChunk) {
          messageChunks.push(currentChunk.trim());
        }
        currentChunk = line;
      } else {
        currentChunk += "\n" + line;
      }
    }
    if (currentChunk) {
      messageChunks.push(currentChunk.trim());
    }
    for (const chunk of messageChunks) {
      const trimmedChunk = chunk.trim();
      if (trimmedChunk.startsWith("#title=") || trimmedChunk.startsWith("#tittle=")) {
        config.title = trimmedChunk.substring(trimmedChunk.indexOf("=") + 1).trim() || "\u804A\u5929";
      } else if (trimmedChunk.startsWith("#theme=")) {
        let themeValue = trimmedChunk.substring(trimmedChunk.indexOf("=") + 1).trim() || "";
        config.theme = this.processTheme(themeValue);
        if (themeValue.includes(",dark")) {
          config.isDarkTheme = true;
        }
      } else if (trimmedChunk.startsWith("@")) {
        trimmedChunk.split("\n").forEach((userLine) => {
          const userInfo = this.parseUserDefinition(userLine.trim());
          if (userInfo) {
            users.set(userInfo.name, userInfo);
          }
        });
      } else {
        let content = chunk;
        let id;
        let user;
        let customColor;
        let quotedMessage;
        const quoteMatch = content.match(this.QUOTE_REGEX);
        if (quoteMatch) {
          const quoteRef = quoteMatch[1].trim();
          quotedMessage = /^\d+$/.test(quoteRef) ? parseInt(quoteRef) : quoteRef;
          content = quoteMatch[2];
        }
        const messageMatch = content.match(this.MESSAGE_DETAILS_REGEX);
        if (messageMatch) {
          const idStr = messageMatch[1];
          customColor = messageMatch[2];
          user = messageMatch[3].trim();
          content = messageMatch[4].trim();
          if (idStr) {
            id = parseInt(idStr);
            messageCounter = Math.max(messageCounter, id + 1);
          } else {
            id = messageCounter++;
          }
          messages.push({
            id,
            user,
            content: this.restoreCodeBlocks(content, codeBlocks),
            customColor,
            quotedMessage,
            timestamp: new Date()
          });
        }
      }
    }
    return { config, users, messages };
  }
  static preprocessNestedCodeBlocks(source) {
    const codeBlocks = /* @__PURE__ */ new Map();
    let blockId = 0;
    const processedSource = source.replace(this.CODE_BLOCK_REGEX, (match, language, code) => {
      const id = `${blockId++}`;
      const marker = `${this.CODE_BLOCK_MARKER}${id}${this.LANG_MARKER}${language}${this.CODE_BLOCK_END_MARKER}`;
      codeBlocks.set(id, code);
      return marker;
    });
    return { processedSource, codeBlocks };
  }
  static restoreCodeBlocks(content, codeBlocks) {
    const markerRegex = new RegExp(`${this.CODE_BLOCK_MARKER}(\\d+)${this.LANG_MARKER}([a-zA-Z0-9_-]*)${this.CODE_BLOCK_END_MARKER}`, "g");
    return content.replace(markerRegex, (match, id, language) => {
      const code = codeBlocks.get(id) || "";
      return `\`\`\`${language}
${code}
\`\`\``;
    });
  }
  static processTheme(theme) {
    const cleanTheme = theme.replace(/"/g, "").replace(/,dark$/, "").trim();
    if (cleanTheme.includes("\\") || cleanTheme.includes(":/")) {
      let processedPath = cleanTheme.replace(/\\/g, "/");
      if (!processedPath.startsWith("file://")) {
        processedPath = "file://" + processedPath;
      }
      return `url("${processedPath}")`;
    }
    if (cleanTheme.startsWith("http")) {
      return `url("${cleanTheme}")`;
    }
    return cleanTheme;
  }
  static parseUserDefinition(line) {
    const match = line.match(this.USER_DEF_REGEX);
    if (!match)
      return null;
    const name = match[1];
    const params = match[2];
    const userInfo = {
      name,
      displayName: name,
      avatar: this.getDefaultAvatar(name),
      color: "",
      position: "L"
    };
    if (params) {
      params.split(",").map((p) => p.trim()).forEach((pair) => {
        if (pair === "L" || pair === "R") {
          userInfo.position = pair;
        } else if (pair.includes(":")) {
          const [key, value] = pair.split(/:(.*)/).map((s) => s.trim());
          switch (key) {
            case "pic":
              userInfo.avatar = value || this.getDefaultAvatar(name);
              break;
            case "col":
              if (this.isValidColor(value))
                userInfo.color = value;
              break;
            case "display":
              userInfo.displayName = value || name;
              break;
          }
        }
      });
    }
    return userInfo;
  }
  static getDefaultAvatar(name) {
    const chineseMatch = name.match(/[\u4e00-\u9fff]/);
    if (chineseMatch)
      return chineseMatch[0];
    const englishMatch = name.match(/[a-zA-Z]/);
    if (englishMatch)
      return englishMatch[0].toUpperCase();
    return name.charAt(0);
  }
  static isValidColor(color) {
    if (!color)
      return false;
    const s = new Option().style;
    s.color = color;
    return s.color !== "";
  }
};
ChatParser.CODE_BLOCK_MARKER = "\xA7\xA7\xA7CODE_BLOCK_START\xA7\xA7\xA7";
ChatParser.CODE_BLOCK_END_MARKER = "\xA7\xA7\xA7CODE_BLOCK_END\xA7\xA7\xA7";
ChatParser.LANG_MARKER = "\xA7\xA7\xA7LANG\xA7\xA7\xA7";
// 优化：将正则表达式提取为静态常量，提高可读性和性能
ChatParser.NEW_MESSAGE_REGEX = /^(?:\d+\s*|>\s*\d+\s*|>.*:\s*)?([^:]+):\s*/;
ChatParser.MESSAGE_DETAILS_REGEX = /^(?:(\d+)(?:\(([^)]+)\))?)?([^:]+):\s*([\s\S]*)/;
ChatParser.QUOTE_REGEX = /^>([^\n]+)(?:\n---\n|\n)([\s\S]*)/;
ChatParser.USER_DEF_REGEX = /@([^\s\(]+)(?:\(([^)]+)\))?/;
ChatParser.CODE_BLOCK_REGEX = /```([a-zA-Z0-9_-]*)\n([\s\S]*?)```/g;

// src/chatRenderer.ts
var ChatRenderer = class extends import_obsidian2.Component {
  constructor(app, settings) {
    super();
    this.app = app;
    this.settings = settings;
  }
  updateSettings(settings) {
    this.settings = settings;
    this.updateAllChatContainers();
    this.updateGlobalCSSVariables();
  }
  updateTheme() {
    this.updateAllChatContainers();
    this.updateGlobalCSSVariables();
  }
  updateAllChatContainers() {
    const chatContainers = document.querySelectorAll(".chat-style-container");
    chatContainers.forEach((container) => {
      this.updateContainerTheme(container);
      this.updateTitleBarStyle(container);
    });
  }
  updateTitleBarStyle(container) {
    const titleEl = container.querySelector(".chat-title");
    if (titleEl) {
      const isDark = document.body.classList.contains("theme-dark");
      const titleBarBg = isDark ? this.settings.titleBarDarkColor : this.settings.titleBarColor;
      const titleTextColor = isDark ? this.settings.titleTextDarkColor : this.settings.titleTextColor;
      titleEl.style.background = titleBarBg;
      titleEl.style.color = titleTextColor;
    }
  }
  updateGlobalCSSVariables() {
    const root = document.documentElement;
    const currentPreset = PRESET_THEMES[this.settings.currentPreset];
    if (currentPreset) {
      root.style.setProperty("--chat-accent-color", currentPreset.accentColor);
      root.style.setProperty("--chat-left-color", currentPreset.leftColor);
      root.style.setProperty("--chat-right-color", currentPreset.rightColor);
    }
    root.style.setProperty("--chat-font-size", `${this.settings.fontSize}px`);
    root.style.setProperty("--chat-font-weight", this.settings.fontWeight);
    root.style.setProperty("--chat-bubble-radius", `${this.settings.bubbleRadius}px`);
    root.style.setProperty("--chat-bubble-opacity", this.settings.bubbleOpacity.toString());
    root.style.setProperty("--chat-avatar-size", `${this.settings.avatarSize}px`);
    root.style.setProperty("--chat-animation-speed", `${this.settings.animationSpeed}s`);
  }
  updateContainerTheme(container) {
    const isDark = document.body.classList.contains("theme-dark");
    const currentPreset = PRESET_THEMES[this.settings.currentPreset];
    let theme;
    if (currentPreset) {
      theme = isDark ? currentPreset.darkBackground : currentPreset.background;
    } else {
      theme = isDark ? this.settings.darkModeTheme : this.settings.lightModeTheme;
    }
    const chatBackground = container.querySelector(".chat-background");
    if (chatBackground) {
      this.applyTheme(chatBackground, theme);
    }
    this.updateBubbleColors(container);
  }
  updateBubbleColors(container) {
    const currentPreset = PRESET_THEMES[this.settings.currentPreset];
    if (!currentPreset)
      return;
    const leftBubbles = container.querySelectorAll(".message-bubble.left");
    const rightBubbles = container.querySelectorAll(".message-bubble.right");
    leftBubbles.forEach((bubble) => {
      const bubbleEl = bubble;
      if (!bubbleEl.dataset.customColor) {
        bubbleEl.style.background = `linear-gradient(135deg, ${currentPreset.leftColor} 0%, ${currentPreset.leftColor}dd 100%)`;
      }
    });
    rightBubbles.forEach((bubble) => {
      const bubbleEl = bubble;
      if (!bubbleEl.dataset.customColor) {
        bubbleEl.style.background = `linear-gradient(135deg, ${currentPreset.rightColor} 0%, ${currentPreset.rightColor}dd 100%)`;
      }
    });
  }
  async renderChat(source, el, ctx) {
    try {
      console.log("\u5F00\u59CB\u6E32\u67D3\u804A\u5929:", source);
      const parsedChat = ChatParser.parse(source);
      console.log("\u89E3\u6790\u7ED3\u679C:", parsedChat);
      await this.createChatInterface(el, parsedChat, ctx);
      console.log("\u6E32\u67D3\u5B8C\u6210");
    } catch (error) {
      console.error("ChatStyle \u6E32\u67D3\u9519\u8BEF:", error);
      const errorEl = document.createElement("div");
      errorEl.className = "chat-error";
      errorEl.textContent = `\u804A\u5929\u683C\u5F0F\u89E3\u6790\u9519\u8BEF: ${error.message}`;
      errorEl.style.cssText = `
				color: #e74c3c; padding: 1.2rem; background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
				border-radius: 12px; border: 1px solid #ef5350; box-shadow: 0 4px 12px rgba(231, 76, 60, 0.2);
				font-weight: 500; margin: 1rem 0;
			`;
      el.appendChild(errorEl);
    }
  }
  async createChatInterface(container, chat, ctx) {
    container.innerHTML = "";
    container.className = "chat-style-container";
    const currentPreset = PRESET_THEMES[this.settings.currentPreset] || PRESET_THEMES.default;
    container.style.cssText = `
			margin: 1.5rem 0; border-radius: 20px; overflow: hidden;
			box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15); backdrop-filter: blur(25px);
			border: 2px solid rgba(255, 255, 255, 0.1); font-family: ${this.settings.fontFamily};
			font-weight: ${this.settings.fontWeight || 400}; position: relative; background: rgba(255, 255, 255, 0.02);
		`;
    const chatContainer = document.createElement("div");
    chatContainer.className = "chat-container";
    chatContainer.style.cssText = `position: relative; min-height: 250px;`;
    container.appendChild(chatContainer);
    const backgroundEl = document.createElement("div");
    backgroundEl.className = "chat-background";
    backgroundEl.style.cssText = `position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 0; background-attachment: fixed;`;
    chatContainer.appendChild(backgroundEl);
    this.applyTheme(backgroundEl, chat.config.theme || this.getDefaultTheme());
    const decorEl = document.createElement("div");
    decorEl.style.cssText = `position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(45deg, ${currentPreset.accentColor}20, transparent); pointer-events: none; z-index: 1;`;
    chatContainer.appendChild(decorEl);
    if (chat.config.title) {
      const titleEl = document.createElement("div");
      titleEl.className = "chat-title";
      titleEl.textContent = chat.config.title;
      const isDark = document.body.classList.contains("theme-dark");
      const titleBarBg = chat.config.theme ? "rgba(255, 255, 255, 0.1)" : isDark ? this.settings.titleBarDarkColor : this.settings.titleBarColor;
      const titleTextColor = chat.config.theme ? "rgba(255, 255, 255, 0.9)" : isDark ? this.settings.titleTextDarkColor : this.settings.titleTextColor;
      titleEl.style.cssText = `
				position: relative; z-index: 2; padding: 1.2rem; text-align: center;
				font-weight: 600; font-size: 1.2em; background: ${titleBarBg};
				backdrop-filter: blur(20px); border-bottom: 1px solid rgba(0, 0, 0, 0.08);
				color: ${titleTextColor}; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); transition: all 0.3s ease;
			`;
      chatContainer.appendChild(titleEl);
    }
    const messagesContainer = document.createElement("div");
    messagesContainer.className = "chat-messages";
    messagesContainer.style.cssText = `position: relative; z-index: 2; padding: 1.5rem; max-height: 600px; overflow-y: auto; background: rgba(255, 255, 255, 0.02);`;
    chatContainer.appendChild(messagesContainer);
    for (const message of chat.messages) {
      await this.renderMessage(messagesContainer, message, chat.users, ctx, currentPreset);
    }
    this.addGlobalStyles();
  }
  async renderMessage(container, message, users, ctx, currentPreset) {
    const user = users.get(message.user);
    const isRight = (user == null ? void 0 : user.position) === "R";
    const messageEl = document.createElement("div");
    messageEl.className = `chat-message ${isRight ? "right" : "left"}`;
    messageEl.setAttribute("data-message-id", message.id.toString());
    messageEl.style.cssText = `
			display: flex; margin-bottom: ${this.settings.messageSpacing + 4}px; align-items: flex-start;
			opacity: 0; animation: messageSlideIn 0.4s ease-out forwards;
			${isRight ? "flex-direction: row-reverse;" : ""}
		`;
    container.appendChild(messageEl);
    const avatarEl = document.createElement("div");
    avatarEl.className = "chat-avatar";
    avatarEl.textContent = (user == null ? void 0 : user.avatar) || message.user.charAt(0);
    const avatarColor = (user == null ? void 0 : user.color) || (isRight ? currentPreset.rightColor : currentPreset.leftColor);
    avatarEl.style.cssText = `
			width: ${this.settings.avatarSize}px; height: ${this.settings.avatarSize}px; border-radius: 50%;
			background: linear-gradient(135deg, ${avatarColor} 0%, ${avatarColor}dd 100%); color: white;
			display: flex; align-items: center; justify-content: center; font-weight: 700;
			font-size: ${this.settings.avatarSize * 0.4}px; flex-shrink: 0; margin: 0 12px;
			box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
			${this.settings.avatarBorder ? `border: 3px solid rgba(255, 255, 255, 0.4);` : ""}
			${this.settings.avatarGlow ? `box-shadow: 0 0 20px ${currentPreset.accentColor}80, 0 6px 20px rgba(0, 0, 0, 0.2);` : ""}
			transition: all 0.3s ease; cursor: pointer;
		`;
    avatarEl.addEventListener("mouseenter", () => {
      avatarEl.style.transform = "scale(1.15) rotate(5deg)";
      avatarEl.style.boxShadow = this.settings.avatarGlow ? `0 0 30px ${currentPreset.accentColor}, 0 8px 30px rgba(0, 0, 0, 0.3)` : "0 8px 30px rgba(0, 0, 0, 0.3)";
    });
    avatarEl.addEventListener("mouseleave", () => {
      avatarEl.style.transform = "scale(1) rotate(0deg)";
      avatarEl.style.boxShadow = this.settings.avatarGlow ? `0 0 20px ${currentPreset.accentColor}80, 0 6px 20px rgba(0, 0, 0, 0.2)` : "0 6px 20px rgba(0, 0, 0, 0.2)";
    });
    messageEl.appendChild(avatarEl);
    const bubbleContainer = document.createElement("div");
    bubbleContainer.className = "chat-bubble-container";
    bubbleContainer.style.cssText = `max-width: 75%; animation: bubbleFloat 0.5s ease-out;`;
    messageEl.appendChild(bubbleContainer);
    if ((user == null ? void 0 : user.displayName) && user.displayName !== user.name) {
      const usernameEl = document.createElement("div");
      usernameEl.className = "chat-username";
      usernameEl.textContent = user.displayName;
      usernameEl.style.cssText = `
				font-size: 0.75em; color: #7f8c8d; margin-bottom: 6px;
				padding: 0 ${this.settings.bubblePadding}px; font-weight: 500;
				text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
			`;
      bubbleContainer.appendChild(usernameEl);
    }
    if (message.quotedMessage) {
      const quoteEl = document.createElement("div");
      quoteEl.className = "chat-quote";
      const quoteText = typeof message.quotedMessage === "number" ? `\u{1F4AC} \u56DE\u590D\u6D88\u606F #${message.quotedMessage}` : `\u{1F4AC} \u56DE\u590D: ${message.quotedMessage}`;
      quoteEl.textContent = quoteText;
      quoteEl.style.cssText = `
				background: linear-gradient(135deg, rgba(52, 152, 219, 0.1) 0%, rgba(155, 89, 182, 0.1) 100%);
				padding: 8px ${this.settings.bubblePadding}px; border-radius: 12px; font-size: 0.85em;
				margin-bottom: 6px; border-left: 4px solid #3498db; position: relative;
				backdrop-filter: blur(10px); box-shadow: 0 2px 8px rgba(52, 152, 219, 0.1);
				${this.settings.enableQuoteJump ? "cursor: pointer; transition: all 0.3s ease;" : ""}
			`;
      if (this.settings.enableQuoteJump) {
        quoteEl.addEventListener("click", () => {
          this.jumpToMessage(message.quotedMessage);
        });
        quoteEl.addEventListener("mouseenter", () => {
          quoteEl.style.background = "linear-gradient(135deg, rgba(52, 152, 219, 0.2) 0%, rgba(155, 89, 182, 0.2) 100%)";
          quoteEl.style.transform = "translateX(4px)";
          quoteEl.style.boxShadow = "0 4px 16px rgba(52, 152, 219, 0.2)";
        });
        quoteEl.addEventListener("mouseleave", () => {
          quoteEl.style.background = "linear-gradient(135deg, rgba(52, 152, 219, 0.1) 0%, rgba(155, 89, 182, 0.1) 100%)";
          quoteEl.style.transform = "translateX(0)";
          quoteEl.style.boxShadow = "0 2px 8px rgba(52, 152, 219, 0.1)";
        });
      }
      bubbleContainer.appendChild(quoteEl);
    }
    const bubbleEl = document.createElement("div");
    bubbleEl.className = `chat-bubble message-bubble ${isRight ? "right" : "left"}`;
    let bubbleColor;
    if (message.customColor) {
      bubbleColor = message.customColor;
      bubbleEl.dataset.customColor = "true";
    } else {
      bubbleColor = isRight ? currentPreset.rightColor : currentPreset.leftColor;
    }
    bubbleEl.style.cssText = `
			padding: ${this.settings.bubblePadding + 2}px ${this.settings.bubblePadding + 4}px;
			border-radius: ${this.settings.bubbleRadius}px;
			background: linear-gradient(135deg, ${bubbleColor} 0%, ${bubbleColor}dd 100%);
			position: relative; word-wrap: break-word;
			${this.settings.bubbleShadow ? `box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);` : ""}
			${this.settings.bubbleGlow ? `box-shadow: 0 0 15px ${currentPreset.accentColor}40, 0 6px 20px rgba(0, 0, 0, 0.1);` : ""}
			border: 1px solid rgba(255, 255, 255, 0.3); backdrop-filter: blur(15px);
			transition: all 0.3s ease; opacity: ${this.settings.bubbleOpacity}; color: white;
		`;
    bubbleEl.addEventListener("mouseenter", () => {
      bubbleEl.style.transform = "translateY(-3px) scale(1.02)";
      if (this.settings.bubbleShadow) {
        bubbleEl.style.boxShadow = "0 12px 30px rgba(0, 0, 0, 0.15)";
      }
      if (this.settings.bubbleGlow) {
        bubbleEl.style.boxShadow = `0 0 25px ${currentPreset.accentColor}60, 0 12px 30px rgba(0, 0, 0, 0.15)`;
      }
    });
    bubbleEl.addEventListener("mouseleave", () => {
      bubbleEl.style.transform = "translateY(0) scale(1)";
      if (this.settings.bubbleShadow) {
        bubbleEl.style.boxShadow = "0 6px 20px rgba(0, 0, 0, 0.1)";
      }
      if (this.settings.bubbleGlow) {
        bubbleEl.style.boxShadow = `0 0 15px ${currentPreset.accentColor}40, 0 6px 20px rgba(0, 0, 0, 0.1)`;
      }
    });
    bubbleContainer.appendChild(bubbleEl);
    const contentEl = document.createElement("div");
    contentEl.className = "chat-content";
    contentEl.style.cssText = `
			font-size: ${this.settings.fontSize}px; font-family: ${this.settings.fontFamily};
			line-height: 1.5; position: relative;
		`;
    bubbleEl.appendChild(contentEl);
    await import_obsidian2.MarkdownRenderer.renderMarkdown(message.content, contentEl, ctx.sourcePath, this);
    if (this.settings.codeBlockEnhanced) {
      this.enhanceCodeBlocks(contentEl, isRight, currentPreset);
    }
    if (this.settings.showTimestamp && message.timestamp) {
      const timestampEl = document.createElement("div");
      timestampEl.className = "chat-timestamp";
      timestampEl.textContent = message.timestamp.toLocaleTimeString();
      timestampEl.style.cssText = `
				font-size: 0.65em; color: #95a5a6; margin-top: 6px;
				text-align: center; font-weight: 400; opacity: 0.8;
			`;
      bubbleContainer.appendChild(timestampEl);
    }
  }
  applyTheme(element, theme) {
    if (!theme) {
      theme = this.getDefaultTheme();
    }
    if (theme.includes("D:") || theme.includes("C:") || theme.includes("/")) {
      const cleanPath = theme.replace(/['"]/g, "");
      if (!cleanPath.startsWith("file://")) {
        theme = `url("file://${cleanPath.replace(/\\/g, "/")}")`;
      } else {
        theme = `url("${cleanPath}")`;
      }
    } else if (theme.startsWith("http")) {
      theme = `url("${theme}")`;
    }
    if (theme.startsWith("url(")) {
      element.style.backgroundImage = theme;
      element.style.backgroundSize = "cover";
      element.style.backgroundPosition = "center";
      element.style.backgroundRepeat = "no-repeat";
    } else {
      element.style.background = theme;
    }
  }
  getDefaultTheme() {
    const isDark = document.body.classList.contains("theme-dark");
    const currentPreset = PRESET_THEMES[this.settings.currentPreset];
    if (currentPreset) {
      return isDark ? currentPreset.darkBackground : currentPreset.background;
    }
    return isDark ? this.settings.darkModeTheme : this.settings.lightModeTheme;
  }
  jumpToMessage(messageRef) {
    const selector = typeof messageRef === "number" ? `[data-message-id="${messageRef}"]` : `[data-message-id*="${messageRef}"]`;
    const targetMessage = document.querySelector(selector);
    if (targetMessage) {
      targetMessage.scrollIntoView({ behavior: "smooth", block: "center" });
      targetMessage.classList.add("highlight");
      setTimeout(() => {
        targetMessage.classList.remove("highlight");
      }, 2e3);
    }
  }
  enhanceCodeBlocks(contentEl, isRight, currentPreset) {
    const codeBlocks = contentEl.querySelectorAll("pre code");
    codeBlocks.forEach((codeBlock) => {
      const codeEl = codeBlock;
      const preEl = codeEl.parentElement;
      if (!preEl)
        return;
      const langClass = Array.from(codeEl.classList).find((cls) => cls.startsWith("language-"));
      const language = langClass ? langClass.replace("language-", "") : "";
      preEl.classList.add("chat-code-block");
      preEl.style.position = "relative";
      preEl.style.margin = "0.5em 0";
      preEl.style.borderRadius = "8px";
      preEl.style.overflow = "hidden";
      if (isRight) {
        preEl.classList.add("right-message-code");
      } else {
        preEl.classList.add("left-message-code");
      }
      if (language && language !== "text" && this.settings.codeBlockShowLanguage) {
        const langTag = document.createElement("div");
        langTag.className = "code-language-tag";
        langTag.textContent = language;
        langTag.style.cssText = `
					position: absolute; top: 0; right: 0; padding: 2px 8px; font-size: 0.7em;
					background: ${isRight ? "rgba(255, 255, 255, 0.2)" : "rgba(0, 0, 0, 0.2)"};
					color: ${isRight ? "white" : "#333"}; border-bottom-left-radius: 6px;
					font-family: var(--font-monospace); opacity: 0.8; z-index: 1;
				`;
        preEl.appendChild(langTag);
      }
      if (this.settings.codeBlockShowCopyButton) {
        const copyBtn = document.createElement("button");
        copyBtn.className = "code-copy-button";
        copyBtn.innerHTML = "\u{1F4CB}";
        copyBtn.title = "\u590D\u5236\u4EE3\u7801";
        copyBtn.style.cssText = `
					position: absolute; top: 0; right: ${language && this.settings.codeBlockShowLanguage ? "50px" : "0"};
					padding: 2px 8px; font-size: 0.8em; background: transparent; border: none;
					color: ${isRight ? "white" : "#333"}; opacity: 0.6; cursor: pointer;
					transition: all 0.2s ease; z-index: 1;
				`;
        copyBtn.addEventListener("mouseenter", () => {
          copyBtn.style.opacity = "1";
        });
        copyBtn.addEventListener("mouseleave", () => {
          copyBtn.style.opacity = "0.6";
        });
        copyBtn.addEventListener("click", (e) => {
          e.preventDefault();
          e.stopPropagation();
          navigator.clipboard.writeText(codeEl.textContent || "").then(() => {
            const originalText = copyBtn.innerHTML;
            copyBtn.innerHTML = "\u2713";
            setTimeout(() => {
              copyBtn.innerHTML = originalText;
            }, 1500);
          }).catch((err) => {
            console.error("\u590D\u5236\u5931\u8D25:", err);
          });
        });
        preEl.appendChild(copyBtn);
      }
      this.applyCodeTheme(codeEl, isRight);
    });
  }
  applyCodeTheme(codeEl, isRight) {
    const theme = this.settings.codeBlockTheme;
    codeEl.style.display = "block";
    codeEl.style.padding = "1em";
    codeEl.style.overflowX = "auto";
    codeEl.style.fontFamily = "'Fira Code', 'JetBrains Mono', 'Consolas', monospace";
    codeEl.style.lineHeight = "1.5";
    codeEl.style.fontSize = "0.85em";
    codeEl.style.tabSize = "4";
    switch (theme) {
      case "github":
        if (isRight) {
          codeEl.style.background = "rgba(13, 17, 23, 0.8)";
          codeEl.style.color = "#c9d1d9";
        } else {
          codeEl.style.background = "rgba(246, 248, 250, 0.8)";
          codeEl.style.color = "#24292e";
        }
        break;
      case "vscode":
        codeEl.style.background = isRight ? "rgba(30, 30, 30, 0.8)" : "rgba(30, 30, 30, 0.8)";
        codeEl.style.color = "#d4d4d4";
        break;
      case "dracula":
        codeEl.style.background = "rgba(40, 42, 54, 0.8)";
        codeEl.style.color = "#f8f8f2";
        break;
      default:
        if (isRight) {
          codeEl.style.background = "rgba(255, 255, 255, 0.15)";
          codeEl.style.color = "#fff";
        } else {
          codeEl.style.background = "rgba(0, 0, 0, 0.05)";
          codeEl.style.color = "#333";
        }
        break;
    }
  }
  addGlobalStyles() {
    if (document.getElementById("chat-style-global-css"))
      return;
    const style = document.createElement("style");
    style.id = "chat-style-global-css";
    style.textContent = `
		@keyframes messageSlideIn {
			from { opacity: 0; transform: translateY(20px); }
			to { opacity: 1; transform: translateY(0); }
		}

		@keyframes bubbleFloat {
			from { opacity: 0; transform: scale(0.8); }
			to { opacity: 1; transform: scale(1); }
		}

		.chat-message.highlight {
			animation: highlightPulse 2s ease-in-out;
		}

		@keyframes highlightPulse {
			0%, 100% { background: transparent; transform: scale(1); }
			50% { background: rgba(255, 235, 59, 0.3); transform: scale(1.02); border-radius: 12px; }
		}

		.chat-messages::-webkit-scrollbar { width: 8px; }
		.chat-messages::-webkit-scrollbar-track { background: rgba(0, 0, 0, 0.05); border-radius: 4px; }
		.chat-messages::-webkit-scrollbar-thumb { background: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.3)); border-radius: 4px; transition: all 0.3s ease; }
		.chat-messages::-webkit-scrollbar-thumb:hover { background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.4)); }

		.theme-dark .chat-title { border-bottom-color: rgba(255, 255, 255, 0.1) !important; }
		.theme-dark .chat-username { color: #bdc3c7 !important; }
		.theme-dark .chat-quote { background: linear-gradient(135deg, rgba(52, 152, 219, 0.15) 0%, rgba(155, 89, 182, 0.15) 100%) !important; border-left-color: #5dade2 !important; }
		.theme-dark .chat-content code { background: rgba(255, 255, 255, 0.1) !important; border-color: rgba(255, 255, 255, 0.2) !important; }
		.theme-dark .message-bubble.left { color: #ecf0f1 !important; }

		@media (max-width: 768px) {
			.chat-bubble-container { max-width: 85% !important; }
			.chat-messages { padding: 1rem !important; }
			.chat-title { padding: 1rem !important; font-size: 1.1em !important; }
		}

		.chat-content p { margin: 0; }
		.chat-content strong { font-weight: 700; color: inherit; }
		.chat-content em { font-style: italic; opacity: 0.9; }
		.chat-content code {
			background: rgba(0, 0, 0, 0.1); padding: 3px 6px; border-radius: 4px;
			font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;
			font-size: 0.9em; border: 1px solid rgba(0, 0, 0, 0.1);
		}

		/* \u4F18\u5316emoji\u56FE\u6807\u663E\u793A */
		.chat-content {
			font-variant-emoji: emoji;
		}
		
		.chat-content span[role="img"],
		.chat-content .emoji {
			font-size: 1.1em;
			vertical-align: middle;
			margin: 0 2px;
			display: inline-block;
		}

		.message-bubble.right .chat-content code {
			background: rgba(255, 255, 255, 0.2);
			border-color: rgba(255, 255, 255, 0.3);
		}
		
		.chat-content pre {
			margin: 0.8em 0; border-radius: 8px; overflow: hidden; position: relative;
		}

		.chat-content pre code {
			display: block; padding: 1em; overflow-x: auto;
			font-family: 'Fira Code', 'JetBrains Mono', 'Consolas', monospace;
			line-height: 1.5; font-size: 0.85em; tab-size: 4;
		}

		.left-message-code code {
			background: rgba(0, 0, 0, 0.05); border: 1px solid rgba(0, 0, 0, 0.1); color: #333;
		}

		.right-message-code code {
			background: rgba(255, 255, 255, 0.15); border: 1px solid rgba(255, 255, 255, 0.2); color: #fff;
		}

		.theme-dark .left-message-code code {
			background: rgba(255, 255, 255, 0.05); border-color: rgba(255, 255, 255, 0.1); color: #eee;
		}

		.chat-content .token.comment { color: #6a9955; }
		.chat-content .token.string { color: #ce9178; }
		.chat-content .token.number { color: #b5cea8; }
		.chat-content .token.keyword { color: #569cd6; }
		.chat-content .token.function { color: #dcdcaa; }
		.chat-content .token.operator { color: #d4d4d4; }
		.chat-content .token.class-name { color: #4ec9b0; }

		.right-message-code .token.comment { color: #a8c9b5; }
		.right-message-code .token.string { color: #ffd1b8; }
		.right-message-code .token.number { color: #d5eec8; }
		.right-message-code .token.keyword { color: #96ccf6; }
		.right-message-code .token.function { color: #fcecaa; }
		.right-message-code .token.operator { color: #f4f4f4; }
		.right-message-code .token.class-name { color: #8ee9d0; }

		.chat-code-block { transition: all 0.3s ease; }
		.chat-code-block:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1); }
		.code-language-tag:hover { opacity: 1; }
		.code-copy-button:hover { opacity: 1; transform: scale(1.1); }
		`;
    document.head.appendChild(style);
  }
};

// main.ts
var ChatStylePlugin = class extends import_obsidian3.Plugin {
  constructor() {
    super(...arguments);
    this.styleEl = null;
  }
  async onload() {
    console.log("\u{1F3A8} ChatStyle \u63D2\u4EF6\u52A0\u8F7D\u4E2D...");
    await this.loadSettings();
    this.chatRenderer = new ChatRenderer(this.app, this.settings);
    this.addSettingTab(new ChatStyleSettingTab(this.app, this));
    this.applyStyles();
    this.registerMarkdownCodeBlockProcessor("chat", async (source, el, ctx) => {
      try {
        await this.chatRenderer.renderChat(source, el, ctx);
      } catch (error) {
        console.error("ChatStyle\u6E32\u67D3\u9519\u8BEF:", error);
        const errorEl = document.createElement("div");
        errorEl.className = "chat-error";
        errorEl.textContent = "\u804A\u5929\u683C\u5F0F\u89E3\u6790\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5\u8BED\u6CD5";
        errorEl.style.cssText = `
					color: #e74c3c;
					padding: 1.2rem;
					background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
					border-radius: 12px;
					border: 1px solid #ef5350;
					box-shadow: 0 4px 12px rgba(231, 76, 60, 0.2);
					font-weight: 500;
					margin: 1rem 0;
				`;
        el.appendChild(errorEl);
      }
    });
    let themeUpdateTimeout;
    this.registerEvent(
      this.app.workspace.on("css-change", () => {
        clearTimeout(themeUpdateTimeout);
        themeUpdateTimeout = setTimeout(() => {
          this.chatRenderer.updateTheme();
          this.applyStyles();
        }, 100);
      })
    );
    this.addCommands();
    console.log("\u2705 ChatStyle \u63D2\u4EF6\u52A0\u8F7D\u5B8C\u6210");
  }
  onunload() {
    console.log("\u{1F44B} ChatStyle \u63D2\u4EF6\u5378\u8F7D\u4E2D...");
    this.removeStyles();
    console.log("\u2705 ChatStyle \u63D2\u4EF6\u5378\u8F7D\u5B8C\u6210");
  }
  async loadSettings() {
    const loadedData = await this.loadData();
    this.settings = Object.assign({}, DEFAULT_SETTINGS, loadedData);
    this.migrateSettings();
  }
  async saveSettings() {
    await this.saveData(this.settings);
    this.chatRenderer.updateSettings(this.settings);
    this.applyStyles();
  }
  // 数据迁移处理
  migrateSettings() {
    let needsSave = false;
    for (const key in DEFAULT_SETTINGS) {
      if (!(key in this.settings)) {
        this.settings[key] = DEFAULT_SETTINGS[key];
        needsSave = true;
      }
    }
    if (needsSave) {
      this.saveSettings();
    }
  }
  // 应用样式
  applyStyles() {
    this.removeStyles();
    const css = this.generateCSS();
    this.styleEl = document.createElement("style");
    this.styleEl.id = "chatstyle-plugin-styles";
    this.styleEl.textContent = css;
    document.head.appendChild(this.styleEl);
    if (this.settings.debugMode) {
      console.log("\u{1F3A8} ChatStyle \u6837\u5F0F\u5DF2\u5E94\u7528");
    }
  }
  // 移除样式
  removeStyles() {
    if (this.styleEl) {
      this.styleEl.remove();
      this.styleEl = null;
    }
  }
  // 生成CSS样式
  generateCSS() {
    const s = this.settings;
    const isDark = document.body.classList.contains("theme-dark");
    const titleBarBg = isDark ? s.titleBarDarkColor : s.titleBarColor;
    const titleTextColor = isDark ? s.titleTextDarkColor : s.titleTextColor;
    let css = `
/* ===== ChatStyle \u63D2\u4EF6\u6837\u5F0F ===== */

/* \u57FA\u7840\u53D8\u91CF\u5B9A\u4E49 */
:root {
	--chatstyle-primary-color: ${s.userMessageBg};
	--chatstyle-secondary-color: ${s.assistantMessageBg};
	--chatstyle-accent-color: ${s.systemMessageBg};
	--chatstyle-text-primary: ${s.userMessageColor};
	--chatstyle-text-secondary: ${s.assistantMessageColor};
	--chatstyle-text-system: ${s.systemMessageColor};
	--chatstyle-font-size: ${s.fontSize}px;
	--chatstyle-font-family: ${s.fontFamily};
	--chatstyle-font-weight: ${s.fontWeight};
	--chatstyle-line-height: ${s.lineHeight};
	--chatstyle-letter-spacing: ${s.letterSpacing}px;
	--chatstyle-bubble-radius: ${s.bubbleRadius}px;
	--chatstyle-bubble-opacity: ${s.bubbleOpacity};
	--chatstyle-bubble-padding: ${s.bubblePadding}px;
	--chatstyle-message-spacing: ${s.messageSpacing}px;
	--chatstyle-avatar-size: ${s.avatarSize}px;
	--chatstyle-container-padding: ${s.containerPadding}px;
	--chatstyle-max-width: ${s.maxMessageWidth}%;
}

/* \u804A\u5929\u5BB9\u5668\u57FA\u7840\u6837\u5F0F */
.chat-container,
.chat-view,
.chat-messages {
	font-family: var(--chatstyle-font-family);
	font-size: var(--chatstyle-font-size);
	font-weight: var(--chatstyle-font-weight);
	line-height: var(--chatstyle-line-height);
	letter-spacing: var(--chatstyle-letter-spacing);
	padding: var(--chatstyle-container-padding);
}

/* \u6807\u9898\u680F\u6837\u5F0F */
${s.enableCustomTitleBar ? `
.chat-title,
.chat-header,
.modal-title,
.view-header-title {
	background: ${titleBarBg} !important;
	color: ${titleTextColor} !important;
	font-size: ${s.fontSize + 2}px !important;
	font-weight: ${s.fontWeight} !important;
	font-family: ${s.fontFamily} !important;
	padding: 12px 16px !important;
	border-radius: 8px 8px 0 0 !important;
	${s.titleBarBlur ? "backdrop-filter: blur(10px);" : ""}
	${s.titleBarGradientAnimation ? `
		background-size: 200% 200%;
		animation: gradientShift 3s ease infinite;
	` : ""}
	transition: all 0.3s ease;
}

${s.titleBarGradientAnimation ? `
@keyframes gradientShift {
	0% { background-position: 0% 50%; }
	50% { background-position: 100% 50%; }
	100% { background-position: 0% 50%; }
}
` : ""}
` : ""}

/* \u6D88\u606F\u6C14\u6CE1\u57FA\u7840\u6837\u5F0F */
.chat-message,
.message-bubble {
	margin: var(--chatstyle-message-spacing) 0;
	padding: var(--chatstyle-bubble-padding);
	border-radius: var(--chatstyle-bubble-radius);
	opacity: var(--chatstyle-bubble-opacity);
	max-width: var(--chatstyle-max-width);
	position: relative;
	transition: all 0.3s ease;
	${s.bubbleBorderWidth > 0 ? `border: ${s.bubbleBorderWidth}px solid rgba(255,255,255,0.2);` : ""}
}

/* \u7528\u6237\u6D88\u606F\u6837\u5F0F */
.chat-message.user,
.message-bubble.user {
	background: ${s.userMessageBg};
	color: ${s.userMessageColor};
	margin-left: auto;
	text-align: right;
}

/* \u52A9\u624B\u6D88\u606F\u6837\u5F0F */
.chat-message.assistant,
.message-bubble.assistant {
	background: ${s.assistantMessageBg};
	color: ${s.assistantMessageColor};
	margin-right: auto;
	text-align: left;
}

/* \u7CFB\u7EDF\u6D88\u606F\u6837\u5F0F */
.chat-message.system,
.message-bubble.system {
	background: ${s.systemMessageBg};
	color: ${s.systemMessageColor};
	margin: 0 auto;
	text-align: center;
	font-style: italic;
}

/* \u5F15\u7528\u6D88\u606F\u6837\u5F0F */
.chat-message.quoted,
.message-bubble.quoted {
	background: ${s.quotedMessageBg};
	color: ${s.quotedMessageColor};
	border-left: 4px solid var(--chatstyle-primary-color);
	margin-left: 20px;
	font-size: 0.9em;
	opacity: 0.8;
}

/* \u6C14\u6CE1\u6548\u679C */
${s.bubbleShadow ? `
.chat-message,
.message-bubble {
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1), 0 4px 16px rgba(0, 0, 0, 0.05);
}
` : ""}

${s.bubbleGlow ? `
.chat-message.user,
.message-bubble.user {
	box-shadow: 0 0 20px rgba(0, 123, 255, 0.3);
}
.chat-message.assistant,
.message-bubble.assistant {
	box-shadow: 0 0 20px rgba(248, 249, 250, 0.3);
}
` : ""}

${s.bubbleHoverEffect ? `
.chat-message:hover,
.message-bubble:hover {
	transform: translateY(-2px);
	box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
}
` : ""}

/* \u5934\u50CF\u6837\u5F0F */
.chat-avatar,
.message-avatar {
	width: var(--chatstyle-avatar-size);
	height: var(--chatstyle-avatar-size);
	border-radius: ${s.avatarRadius || s.avatarSize / 2}px;
	${s.avatarBorder ? "border: 2px solid rgba(255, 255, 255, 0.3);" : ""}
	${s.avatarShadow ? "box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);" : ""}
	${s.avatarGlow ? "box-shadow: 0 0 15px rgba(0, 123, 255, 0.4);" : ""}
	transition: all 0.3s ease;
}

${s.avatarHoverScale ? `
.chat-avatar:hover,
.message-avatar:hover {
	transform: scale(1.1);
}
` : ""}

/* \u6587\u5B57\u6548\u679C */
${s.textShadow ? `
.chat-message,
.message-bubble {
	text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}
` : ""}

/* \u52A8\u753B\u6548\u679C */
${s.enableAnimations ? `
.chat-message,
.message-bubble {
	animation: messageSlideIn 0.3s ease-out;
}

@keyframes messageSlideIn {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: var(--chatstyle-bubble-opacity);
		transform: translateY(0);
	}
}

${s.enableTypewriter ? `
.chat-message.typing {
	animation: typewriter 2s steps(40) infinite;
}

@keyframes typewriter {
	from { width: 0; }
	to { width: 100%; }
}
` : ""}
` : ""}

/* \u4EE3\u7801\u5757\u589E\u5F3A */
${s.codeBlockEnhanced ? `
.chat-message pre,
.message-bubble pre {
	position: relative;
	background: #f8f9fa;
	border: 1px solid #e9ecef;
	border-radius: 6px;
	padding: 16px;
	margin: 8px 0;
	overflow-x: auto;
	${s.codeBlockLineNumbers ? "counter-reset: line-number;" : ""}
}

.theme-dark .chat-message pre,
.theme-dark .message-bubble pre {
	background: #2d3748;
	border-color: #4a5568;
	color: #e2e8f0;
}

${s.codeBlockShowLanguage ? `
.chat-message pre::before,
.message-bubble pre::before {
	content: attr(data-language);
	position: absolute;
	top: 8px;
	right: 8px;
	background: rgba(0, 0, 0, 0.1);
	padding: 2px 8px;
	border-radius: 4px;
	font-size: 12px;
	opacity: 0.7;
}
` : ""}

${s.codeBlockShowCopyButton ? `
.chat-message pre::after,
.message-bubble pre::after {
	content: "\u{1F4CB}";
	position: absolute;
	top: 8px;
	right: ${s.codeBlockShowLanguage ? "80px" : "8px"};
	cursor: pointer;
	padding: 4px 8px;
	border-radius: 4px;
	background: rgba(0, 0, 0, 0.1);
	opacity: 0.7;
	transition: opacity 0.2s;
}

.chat-message pre:hover::after,
.message-bubble pre:hover::after {
	opacity: 1;
}
` : ""}
` : ""}

/* \u9AD8\u7EA7\u89C6\u89C9\u6548\u679C */
${s.enableGlassmorphism ? `
.chat-message,
.message-bubble {
	backdrop-filter: blur(10px);
	background: rgba(255, 255, 255, 0.1);
	border: 1px solid rgba(255, 255, 255, 0.2);
}
` : ""}

${s.enableNeonEffect ? `
.chat-message.user,
.message-bubble.user {
	box-shadow: 
		0 0 5px currentColor,
		0 0 10px currentColor,
		0 0 15px currentColor,
		0 0 20px currentColor;
}
` : ""}

/* \u53EF\u8BBF\u95EE\u6027\u652F\u6301 */
${s.highContrast ? `
.chat-message,
.message-bubble {
	border: 2px solid currentColor;
	background: ${isDark ? "#000000" : "#ffffff"} !important;
	color: ${isDark ? "#ffffff" : "#000000"} !important;
}
` : ""}

${s.reducedMotion ? `
@media (prefers-reduced-motion: reduce) {
	.chat-message,
	.message-bubble,
	.chat-avatar,
	.message-avatar {
		animation: none !important;
		transition: none !important;
	}
}
` : ""}

/* \u65F6\u95F4\u6233\u663E\u793A */
${s.showTimestamp ? `
.chat-message::after,
.message-bubble::after {
	content: attr(data-timestamp);
	display: block;
	font-size: 0.8em;
	opacity: 0.6;
	margin-top: 4px;
	text-align: right;
}
` : ""}

/* \u81EA\u5B9A\u4E49CSS */
${s.enableCustomCSS ? s.customCSS : ""}

/* \u54CD\u5E94\u5F0F\u8BBE\u8BA1 */
@media (max-width: 768px) {
	.chat-message,
	.message-bubble {
		max-width: 95%;
		font-size: calc(var(--chatstyle-font-size) - 1px);
	}
	
	.chat-avatar,
	.message-avatar {
		width: calc(var(--chatstyle-avatar-size) - 8px);
		height: calc(var(--chatstyle-avatar-size) - 8px);
	}
}
`;
    return css;
  }
  // 添加命令
  addCommands() {
    this.addCommand({
      id: "apply-preset",
      name: "\u5E94\u7528\u9884\u8BBE\u4E3B\u9898",
      callback: () => {
        console.log("\u663E\u793A\u9884\u8BBE\u4E3B\u9898\u9009\u62E9\u5668");
      }
    });
    this.addCommand({
      id: "reset-settings",
      name: "\u91CD\u7F6E\u6240\u6709\u8BBE\u7F6E",
      callback: async () => {
        this.settings = Object.assign({}, DEFAULT_SETTINGS);
        await this.saveSettings();
        console.log("\u2705 \u8BBE\u7F6E\u5DF2\u91CD\u7F6E\u4E3A\u9ED8\u8BA4\u503C");
      }
    });
  }
  // 应用预设主题
  async applyPreset(presetKey) {
    if (PRESET_THEMES[presetKey]) {
      const preset = PRESET_THEMES[presetKey];
      this.settings.currentPreset = presetKey;
      this.settings.titleBarColor = preset.titleBarColor;
      this.settings.titleBarDarkColor = preset.titleBarDarkColor;
      this.settings.titleTextColor = preset.titleTextColor;
      this.settings.titleTextDarkColor = preset.titleTextDarkColor;
      this.settings.userMessageBg = preset.leftColor;
      this.settings.assistantMessageBg = preset.rightColor;
      this.settings.systemMessageBg = preset.accentColor;
      await this.saveSettings();
      if (this.settings.debugMode) {
        console.log(`\u2705 \u5DF2\u5E94\u7528\u9884\u8BBE\u4E3B\u9898: ${preset.name}`);
      }
    }
  }
  // 应用标题栏预设
  async applyTitleBarPreset(presetKey) {
    if (TITLE_BAR_PRESETS[presetKey]) {
      const preset = TITLE_BAR_PRESETS[presetKey];
      this.settings.titleBarColor = preset.titleBarColor;
      this.settings.titleTextColor = preset.titleTextColor;
      this.settings.titleBarDarkColor = preset.titleBarDarkColor;
      this.settings.titleTextDarkColor = preset.titleTextDarkColor;
      this.settings.fontSize = preset.fontSize;
      this.settings.fontWeight = preset.fontWeight;
      this.settings.fontFamily = preset.fontFamily;
      await this.saveSettings();
      if (this.settings.debugMode) {
        console.log(`\u2705 \u5DF2\u5E94\u7528\u6807\u9898\u680F\u9884\u8BBE: ${preset.name}`);
      }
    }
  }
  // 切换主题
  toggleTheme() {
    const isDark = document.body.classList.contains("theme-dark");
    if (isDark) {
      document.body.classList.remove("theme-dark");
      document.body.classList.add("theme-light");
    } else {
      document.body.classList.remove("theme-light");
      document.body.classList.add("theme-dark");
    }
    this.applyStyles();
    if (this.settings.debugMode) {
      console.log(`\u2705 \u4E3B\u9898\u5DF2\u5207\u6362\u4E3A: ${isDark ? "\u6D45\u8272" : "\u6DF1\u8272"}`);
    }
  }
  // 重置设置
  async resetSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS);
    await this.saveSettings();
    if (this.settings.debugMode) {
      console.log("\u2705 \u8BBE\u7F6E\u5DF2\u91CD\u7F6E\u4E3A\u9ED8\u8BA4\u503C");
    }
  }
  // 显示预设选择器
  showPresetSelector() {
    const presetKeys = Object.keys(PRESET_THEMES);
    const presetNames = presetKeys.map((key) => PRESET_THEMES[key].name);
    console.log("\u53EF\u7528\u9884\u8BBE\u4E3B\u9898:", presetNames);
    if (this.settings.debugMode) {
      console.log("\u663E\u793A\u9884\u8BBE\u4E3B\u9898\u9009\u62E9\u5668");
    }
  }
};
